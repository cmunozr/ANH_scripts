map(names(Data.ee.tt),function(x){
point.dff<-Data.ee.tt[[x]]
plotMU_cat(x,point.dff,'Plataf','eventPer','CobsubMUPer_Est')
})
#Plot by sub-MU-Incidence-period
plotMU_cat('grp',Data.ei.ttt,'grp','evenPer','subMU_EstGr_Inc')
#boxplot by ctnm, inc
map(names(grp),function(x){
point.dff<-Data.ee.prr%>%filter(grp==x)
flnm<-paste(ctnm,'MU_est_inc',x,sep='_')
boxpMU_cat(x,point.dff,ctnm,flnm)
})
#boxplot by Plataf, inc
map(names(grp),function(x){
point.dff<-Data.ee.prr%>%filter(grp==x)
flnm<-paste('PlatafMU_est_inc',x,sep='_')
boxpMU_cat(x,point.dff,'Plataf',flnm)
})
#plot by continue variables
Data.ee.e<-map(names(Data.ee.mm),function(x){
point.df<-Data.ee.mm[[x]]%>%
inner_join(.,samEff.ttt[[x]][,c("parentEventID","samplEff.1")],
by="parentEventID")
write.csv(point.df,file.path(WDOut,'CurvasDiversidad',paste(gnm,'_',x,'MU_Estim.csv',sep='')))
return(point.df)
})
names(Data.ee.e)<-names(Data.ee.mm)
kpv<-c(kpv,'Data.ee.e')
map(names(Data.ee.e), function(x){
map(c(v.pres,v.rec,v.msite), function (vv){
print(vv)
plnm<-paste('DivP_',gnm,'_',x,'_',vv,sep='')
point.df<-Data.ee.e[[x]]
plotCvar(point.df,vv,plnm,x)
})
})
# plots with incidence data
map(unique(Data.ee.prr$grp), function(x){
map(c(v.msite,v.pres,v.rec), function (v){
point.df<-Data.ee.prr%>%dplyr::select(estimado,order,grp,cmb_smpEf,all_of(v))%>%
filter(grp==x)
names(point.df)[names(point.df)=='cmb_smpEf']<-'samplEff.1'
plnm<-paste('DivP_Inc_',gnm,'_',x,'_',v,sep='')
plotCvar(point.df,v,plnm,x)
})})
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#6 Curvas de Rank-Abundancia
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
#ctnm
library(ggrepel);library(tidyr); library(tibble)
Data.rk.a<-Data.a.r(ctnm,gnm,fnn,scale=TRUE)
map(names(Data.rk.a), function(x){
RA.data<-Data.rk.a[[x]]
plotRnkAb(RA.data,gnm,ctnm,x)
})
#Plataforma
Data.rk.pf<-Data.a.r('Plataf',gnm,fnn,scale=TRUE)#paste(gnm,'f8'),fnn,scale=FALSE  gnm,fnn,scale=TRUE
map(names(Data.rk.pf), function(x){
RA.data<-Data.rk.pf[[x]]
plotRnkAb(RA.data,gnm,'Plataf',x)
})
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
Data.pr<-Data.r%>%
mutate('Periodo'=gsub(schtxt,"_",eventID))#%>%dplyr::select(-eventID)
Data.rk.at<-Data.a.rt(Data.rr = Data.pr,cnm1 = ctnm, cnm2 = 'Periodo',grnm = gnm,fn = fnn,scale=FALSE)
map(names(Data.rk.at), function(x){
RA.data<-Data.rk.at[[x]]
plotRnkAb(RA.data,gnm,"Cob_Period",x)
})
kpv<-c(kpv,'Data.rk.a','Data.rk.c','Data.rk.pf','Data.rk.rh','Data.rk.sl')
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
Data.pr<-Data.r%>%
mutate('Periodo'=gsub(schtxt,"_",eventID))#%>%dplyr::select(-eventID)
View(Data.pr)
Data.rk.at<-Data.a.rt(Data.rr = Data.pr,cnm1 = ctnm, cnm2 = 'Periodo',grnm = gnm,fn = fnn,scale=FALSE)
map(names(Data.rk.at), function(x){
RA.data<-Data.rk.at[[x]]
plotRnkAb(RA.data,gnm,"Cob_Period",x)
})
View(Data.rk.at)
kpv<-c(kpv,'Data.rk.a','Data.rk.c','Data.rk.pf','Data.rk.rh','Data.rk.sl')
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
load("kpv_temp.RData")
outD<-'Aves'#'Zooplancton' #master folder for output
outDD<-'Aves'#'Hidrobiologicos' #Grupo like stated in the covariate file
ctnm<- "CobAves" #"CobMam" # 'waterBody' #CobColl'#"CuerpAgua" #reptiles y anfibios: CobHerp #escarabajos coprofagos: "CobCopr" #main factor for anÃ¡lisis
gnm<- 'Aves' #'Coll'#"Zoop" #group prefix
fnn<-"sum" #function to aggregate samples within sampling unites
WDOut<-file.path(getwd(), "Analisis", "SalidasPreliminares")
dir.create(file.path(WDOut,outD), showWarnings = F)
WDOut<-file.path(WDOut,outD)
WDIn<-file.path(getwd(), "Analisis",'Matrices_Abundancia')
WDIn2<-file.path(getwd(), "Analisis",'Datos_Finales')
WDCov<-file.path(getwd(), "Analisis",'Covariables')
WDFunc<-file.path(getwd())
#create subdirectories
dir.create(file.path(WDOut,'CurvasDiversidad'), showWarnings = F)
dir.create(file.path(WDOut,'CurvasRank'), showWarnings = F)
dir.create(file.path(WDOut,'Covariables_PCA'), showWarnings = F)
dir.create(file.path(WDOut,'NMDS'), showWarnings = F)
dir.create(file.path(WDOut,'RDA'), showWarnings = F)
#0c) functions
source(file.path(WDFunc,'R/ANH_procAbu_functions.R'))
Data.et<-read.xlsx(file.path(getwd(),"data", "aves", "I2D-BIO_2021_050_v5_T2.xlsx"),
sheet="Eventos", startRow = 1, na.strings = "N/A")
#All
Data.et$eventID<-gsub('-','_',Data.et$eventID)
Data.r<-read.xlsx(file.path(getwd(),"data", "aves", "I2D-BIO_2021_050_v5_T2.xlsx"),
sheet="Registros", startRow = 1, na.strings = "N/A")
#All
Data.r$eventID<-gsub('-','_',Data.r$eventID)
# birds
# matching eventID of eventos and registros with cov (ex. from eventID ANH_220_A_P1_R1 to ANH_220_A_P1)
# removing the last one label "_R1"
if(outDD == "Aves"){
Data.et <- modify_event_label(data = Data.et, n = 5)
Data.r <- modify_event_label(data = Data.r, n = 5)
}
# identificationQualifier is used when we can't arrive to specific epithets of species
# used with fishes for example but not with birds
if(!is.null(Data.r$identificationQualifier)){
Data.r$identificationQualifier<-tolower(Data.r$identificationQualifier)
}
# All
library(Hmisc)
Data.r$scientificName[grep('^[[:lower:]]{1}',Data.r$scientificName)]<-
capitalize(Data.r$scientificName[grep('^[[:lower:]]', Data.r$scientificName)])
#All
#Estimate unique data
selr<-unique(Data.r$eventID)
# not coprofagos
SbUME<-Data.et$eventID[which(!Data.et$eventID%in%selr)] #Data with zero records
SbUMT<-unique(Data.et$eventID)
#All
kpv<-c(kpv,c('Data.et','Data.r','SbUME','SbUMT','Data.rs'))
#All
#UM  empty
Data.r$parentEventID <- gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)
UM<-unique(Data.r$parentEventID)
UME<-setdiff(unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)), UM)
UMT<-unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", SbUMT))
kpv<-c(kpv,c('UM','UME','UMT'))
#others
Data.r <- complete_cols(Data.r, Data.et, "eventID",vector_cols = c("samplingProtocol"))#
library(stringi)
Data.et$samplingProtocol <- trimws(Data.et$samplingProtocol)
Data.r$samplingProtocol <- trimws(Data.r$samplingProtocol)
Data.et$samplingProtocol <- homolog_factors(Data.et, column = "samplingProtocol")
Data.r$samplingProtocol <- homolog_factors(Data.r, column = "samplingProtocol")
#Data.r$habitat<-trimws(Data.r$habitat)
Data.r$organismQuantity<-as.numeric(Data.r$organismQuantity)
Data.et$samplingEffort[is.na(Data.et$samplingEffort)]<-0
unique(Data.et$samplingProtocol); unique(Data.r$samplingProtocol)
### This applies for birds###
if(outDD == "Aves"){
names(Data.et)[3]<-'parentEventID'
}
#All
unique(Data.r$samplingProtocol);unique(Data.et$samplingProtocol)
Data.e<-Data.et[Data.et$eventID%in%selr,] #only those records with data
#2c) group environment
#All
#section to verify that names of the columns is consistent
cnm.smp<-c("samplingEffort","samplingProtocol") #from data
kpv<-c(kpv,c('Data.e','ctnm','fnn','cnm.smp','gnm'))
Data.r$scientificName_2<-trimws(Data.r$scientificName)
# identificationQualifier is used when we can't arrive to specific epithets of species
# used with fishes for example but not with birds
if(!is.null(Data.r$identificationQualifier)){
selrnm<-!is.na(Data.r$identificationQualifier)
Data.r$scientificName_2[selrnm]<-paste(Data.r$scientificName[selrnm],
trimws(Data.r$identificationQualifier[selrnm]))
}
#All
unique(Data.r$scientificName_2)
shrscitf<-gsub("^([[:alpha:]]{4}).*([[:space:]])([[:alpha:]]{4}).*$","\\1_\\3",
unique(Data.r$scientificName_2))
dupl<-which(shrscitf%in%shrscitf[duplicated(shrscitf)])
duplsp<-unique(Data.r$scientificName_2)[dupl]
print(duplsp)
Data.r[Data.r$scientificName_2%in%duplsp[3:4],c('scientificName','scientificName_2')]
# All
# others
covbk<-covbk[covbk$parentEventID%in%UMT,] #gets covariates on all UM
#All
cov<-covbk
cov$eventID <- gsub(pattern = "-", replacement = "_", x = cov$eventID)
kpv<-c(kpv,c('cov'))
# modify gsub searching character
samEff.t<-Data.et[,c('parentEventID',cnm.smp)] %>% na.omit(.)%>%
dplyr::mutate(samplEff=as.numeric(gsub("([0-9]+).*$",'\\1',samplingEffort)))%>%
dplyr::group_by(parentEventID,get(cnm.smp[2]))%>%
dplyr::summarize(samplEff=sum(samplEff),Num_ev=dplyr::n())
#All
colnames(samEff.t)[1:2]<-c('parentEventID',cnm.smp[2])
sameEff.tt<-split(samEff.t,as.factor(samEff.t$samplingProtocol))
library(vegan)
samEff.ttt<-purrr::map(sameEff.tt, function(x) data.frame(as.data.frame(x),
decostand(as.vector(x[,"samplEff"]),"max")))
kpv<-c(kpv,'samEff.ttt')
rm(list=ls()[!ls()%in%kpv])
# birds: filter samplingprotocol
Data.e <- Data.e %>% filter(samplingProtocol == "Punto Fijo" )
Data.et <- Data.et %>% filter(samplingProtocol == "Punto Fijo" )
Data.r <- Data.r %>% filter(samplingProtocol == "Punto Fijo" )
# Murcielagos: removeduplicated columns in Data.r
Data.r <- Data.r %>%  dplyr::select(.,-names(Data.r)[duplicated(names(Data.r))])
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
# All
Data.r2<-Data.r %>% dplyr::filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
nsp<-unique(Data.r2$parentEventID)
nsp<-length(!nsp%in%ompv)
library(tidyr)
Data.ee.r<-Data.r2%>%
dplyr::select(parentEventID,organismQuantity,samplingProtocol,scientificName_2)%>%
pivot_wider(names_from=parentEventID,values_from=organismQuantity,
values_fn=sum,values_fill=0)%>%
dplyr::mutate(TotAbu=rowSums(.[,3:(nsp+2)]),.keep="unused")%>%
dplyr::select(scientificName_2,samplingProtocol,TotAbu)
#others without zeros in the dataframe
library(tibble)
Data.ee.r<-Data.ee.r%>%pivot_wider(.,names_from=samplingProtocol,values_from=TotAbu, values_fn=sum,values_fill=0)%>%
column_to_rownames(.,var="scientificName_2")%>%as.list(.)
# All
library(iNEXT)
library(dplyr)
Hill.r<-iNEXT(Data.ee.r,q=c(0,1,2),datatype = "abundance")
PrintggiNext(paste(gnm,'_abM',sep=''),Hill.r)
kpv<-c(kpv,'Hill.r','Data.ee.r')
rm(list=ls()[!ls()%in%kpv])
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
Data.r2<-Data.r%>%filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
Data.ii.r<-Data.r2%>%
dplyr::select(parentEventID,organismQuantity,scientificName_2)%>%
pivot_wider(names_from=parentEventID,values_from=organismQuantity, values_fn=sum,values_fill=0)%>%
mutate_if(is.numeric,~1*(.>0))%>%column_to_rownames(.,var="scientificName_2")%>%list(.)
Hill.rr<-iNEXT(Data.ii.r,q=c(0,1,2),datatype = "incidence_raw")
names(Hill.rr$iNextEst)<-"Regional"
PrintggiNext(paste(gnm,'_incO',sep=''),Hill.rr)
kpv<-c(kpv,'Hill.rr')
rm(list=ls()[!ls()%in%kpv])
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
# ctnm
Data.ee.oo<-Data.a.f(catnm = ctnm, fn="sum",scale=TRUE) #scale is used for groups non-integer abundance
map(names(Data.ee.oo), function (x){
write.csv(Data.ee.oo[[x]],file.path(WDOut,
paste("species_HabHomolog", x,".csv", sep="")))
})
Data.ee.oo2<-map(names(Data.ee.oo),function(xx){
x<-Data.ee.oo[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.oo2)<-names(Data.ee.oo)
map(names(Data.ee.oo),function(xx){
fnm2<-paste(gnm,ctnm,xx,sep='_')
v<-Data.ee.oo2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,ctnm,v)
return()
})
kpv<-c(kpv,'Data.ee.oo')
##Plataforma
Data.ee.pt<-Data.a.f('Plataf',fnn,scale=FALSE)
write.csv(Data.ee.pt[[1]],file.path(WDOut,"species_plataf.csv"))
Data.ee.pt2<-map(names(Data.ee.pt),function(xx){
x<-Data.ee.pt[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.pt2)<-names(Data.ee.pt)
map(names(Data.ee.pt),function(xx){
fnm2<-paste(gnm,'Plataf',xx,sep='_')
v<-Data.ee.pt2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,'Plataf',v)
return()
})
#All
rm(list=ls()[!ls()%in%kpv])
#Aves
ommt<-c()
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
#ctnm
Data.ei.oo<-Data.i.f(ctnm)
Data.ei.oo2<-iNEXT(Data.ei.oo,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm,ctnm,sep='_')
PrintggiNextInc(fnm2,Data.ei.oo2)
fnm2<-paste(gnm,ctnm,'Inc',sep='_')
PrintRefiNext(fnm2,ctnm,Data.ei.oo2)
kpv<-c(kpv,'Data.ei.oo')
#plataforma
Data.ei.pt<-Data.i.f(catnm = 'Plataf')
Data.ei.pt2<-iNEXT(Data.ei.pt,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm, 'Plataf',sep='_')
PrintggiNextInc(fnm2,Data.ei.pt2)
fnm2<-paste(gnm,'Plataf','Inc',sep='_')
PrintRefiNext(fnm2,'Plataf',Data.ei.pt2)
kpv<-c(kpv,'Data.ei.pt2')
# All
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
Data.ee.mm0<-Data.a.MU(DataP = Data.r,evID = 'parentEventID',
expPEID = "^(ANH_[0-9]+)(_.*)$",fn = fnn, scale=FALSE)
Data.ee.mm<-map(names(Data.ee.mm0),function(x){
xx<-Data.ee.mm0[[x]]
y<-CompletEmpty(xx,'parentEventID',UME,x)
})
names(Data.ee.mm)<-names(Data.ee.mm0)
kpv<-c(kpv,'Data.ee.mm')
rm(list=ls()[!ls()%in%kpv])
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
Data.ee.nn0<-Data.a.MU(Data.r,'eventID',"^(ANH_[0-9]+)(_.*)$",fnn,scale=FALSE)
Data.ee.nn<-map(names(Data.ee.nn0),function(x){
xx<-Data.ee.nn0[[x]]
y<-CompletEmpty(xx,'eventID',SbUME,x)
#shorter names for coprofagos
#y$eventID<-gsub("(ANH_[0-9]+)(_T. Exc. Human)([0-9]+)(_2021-)([0-9]+-[0-9]+)(/.*)","\\1_\\3/\\5",y$eventID)
return(y)
})
names(Data.ee.nn)<-names(Data.ee.nn0)
kpv<-c(kpv,'Data.ee.nn')
rm(list=ls()[!ls()%in%kpv])
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
schtxt<-""
library(lubridate)
Data.pr<-Data.r%>%
mutate('eventPer'=hour(as.POSIXct(Data.r$eventTime,format="%H:%M:%S")))
Data.pr$eventPer[Data.pr$eventPer<18|Data.pr$eventPer>21]<-21
Data.pr$eventPer<-paste(Data.pr$parentEventID,Data.pr$eventPer,sep='_')
#All
Data.ee.tt<-Data.a.MU(Data.pr,'eventPer',"^(ANH_[0-9]+)(_.*)$",fnn)
kpv<-c(kpv,'Data.ee.tt','schtxt')
rm(list=ls()[!ls()%in%kpv])
#4d) Diversidad agregando protocols
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
# All
Data.pt<-Data.r%>%
filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
nsp<-length(unique(Data.pt$parentEventID))
#Aves
grp<-list('PntFijo'=c('Punto Fijo'))
Data.ee.pr<-Data.a.pt(grp,Data.pt,'eventID',fnn,scale=TRUE) #cambiar ID dependiendo de registros
#Aves
Data.ee.prr<-Data.i.pr(Data.ee.pr,grp,'parentEventID',
expPEID='^(ANH_[0-9]+)(_.*)$',
c('Punto Fijo'))
#All
cov.1<-cov%>%filter(parentEventID%in%Data.ee.prr$parentEventID)%>%
distinct(parentEventID,.keep_all=T)%>%dplyr::select(-c('eventID'))
Data.ee.prr<-Data.ee.prr%>%
inner_join(.,cov.1, by="parentEventID")
write.csv(Data.ee.prr,file.path(WDOut,'CurvasDiversidad',
paste(gnm,'_','MU_Inc_Estim_Grp.csv',sep='')))
kpv<-c(kpv,'Data.ee.pr','Data.ee.prr','grp')
rm(list=ls()[!ls()%in%kpv])
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
Data.pr<-Data.r%>%
mutate('eventPer'=gsub(schtxt,"_",eventID))%>%dplyr::select(-eventID) #Peces _
Data.ei.t<-Data.a.pt(grp,Data.pr,'eventPer',fn="sum")
Data.ei.ttt<-Data.a.t(Data.t = Data.ei.t,evID = 'evenPer',grpp = grp,samEf = samEff.ttt,selcc = c('Punto Fijo'))
write.csv(Data.ei.ttt,file.path(WDOut,'CurvasDiversidad', paste(gnm,'_','SubTempMU_Estim_Grp.csv',sep='')))
kpv<-c(kpv,'Data.ei.t','Data.ei.ttt')
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#5) Plot with MU diversity -Abundance
#plot with cover color
library(forcats); library(dplyr); library(ggplot2)
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
plotMU_cat(x,point.dff,ctnm,'parentEventID','MU_Est')
})
#Plataforma
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
plotMU_cat(x,point.dff,"Plataf",'parentEventID','MU_Est_Cob')
})
#box plot by ctnm
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
boxpMU_cat(x,point.dff,ctnm,'HabMU_est')
})
#box plot by Plataforma
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
boxpMU_cat(x,point.dff,"Plataf",'CobMU_est')
})
#plot by MU with sampling groups
plotMU_cat('grp',Data.ee.prr,'grp','parentEventID','MU_EstGr_Inc')
#ctnm
plotMU_cat(names(Data.ee.pr),Data.ee.prr,ctnm,'parentEventID','MU_Est_cobHorm')
#ctnm
map(names(Data.ee.nn),function(x){
point.dff<-Data.ee.nn[[x]]
plotMU_cat(x,point.dff,ctnm,'eventID','subMU_Est')
})
#Plataforma
map(names(Data.ee.nn),function(x){
point.dff<-Data.ee.nn[[x]]
plotMU_cat(x,point.dff,"Plataf",'eventID','subMU_Est')
})
#plot by sub-MU-period abundance
#ctnm*******************************************************
map(names(Data.ee.tt),function(x){
point.dff<-Data.ee.tt[[x]]
plotMU_cat(x,point.df = point.dff,catnm = ctnm,feven = 'eventPer',sxnm = 'HabsubMUPer_Est')
})
#Plataforma**************************************************
map(names(Data.ee.tt),function(x){
point.dff<-Data.ee.tt[[x]]
plotMU_cat(x,point.dff,'Plataf','eventPer','CobsubMUPer_Est')
})
#Plot by sub-MU-Incidence-period
plotMU_cat('grp',Data.ei.ttt,'grp','evenPer','subMU_EstGr_Inc')
#boxplot by ctnm, inc
map(names(grp),function(x){
point.dff<-Data.ee.prr%>%filter(grp==x)
flnm<-paste(ctnm,'MU_est_inc',x,sep='_')
boxpMU_cat(x,point.dff,ctnm,flnm)
})
#boxplot by Plataf, inc
map(names(grp),function(x){
point.dff<-Data.ee.prr%>%filter(grp==x)
flnm<-paste('PlatafMU_est_inc',x,sep='_')
boxpMU_cat(x,point.dff,'Plataf',flnm)
})
#plot by continue variables
Data.ee.e<-map(names(Data.ee.mm),function(x){
point.df<-Data.ee.mm[[x]]%>%
inner_join(.,samEff.ttt[[x]][,c("parentEventID","samplEff.1")],
by="parentEventID")
write.csv(point.df,file.path(WDOut,'CurvasDiversidad',paste(gnm,'_',x,'MU_Estim.csv',sep='')))
return(point.df)
})
names(Data.ee.e)<-names(Data.ee.mm)
kpv<-c(kpv,'Data.ee.e')
map(names(Data.ee.e), function(x){
map(c(v.pres,v.rec,v.msite), function (vv){
print(vv)
plnm<-paste('DivP_',gnm,'_',x,'_',vv,sep='')
point.df<-Data.ee.e[[x]]
plotCvar(point.df,vv,plnm,x)
})
})
# plots with incidence data
map(unique(Data.ee.prr$grp), function(x){
map(c(v.msite,v.pres,v.rec), function (v){
point.df<-Data.ee.prr%>%dplyr::select(estimado,order,grp,cmb_smpEf,all_of(v))%>%
filter(grp==x)
names(point.df)[names(point.df)=='cmb_smpEf']<-'samplEff.1'
plnm<-paste('DivP_Inc_',gnm,'_',x,'_',v,sep='')
plotCvar(point.df,v,plnm,x)
})})
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#6 Curvas de Rank-Abundancia
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
#ctnm
library(ggrepel);library(tidyr); library(tibble)
Data.rk.a<-Data.a.r(ctnm,gnm,fnn,scale=TRUE)
map(names(Data.rk.a), function(x){
RA.data<-Data.rk.a[[x]]
plotRnkAb(RA.data,gnm,ctnm,x)
})
#Plataforma
Data.rk.pf<-Data.a.r('Plataf',gnm,fnn,scale=TRUE)#paste(gnm,'f8'),fnn,scale=FALSE  gnm,fnn,scale=TRUE
map(names(Data.rk.pf), function(x){
RA.data<-Data.rk.pf[[x]]
plotRnkAb(RA.data,gnm,'Plataf',x)
})
#Aves
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
Data.pr<-Data.r%>%
mutate('Periodo'=gsub(schtxt,"_",eventID))#%>%dplyr::select(-eventID)
Data.rk.at<-Data.a.rt(Data.rr = Data.pr,cnm1 = ctnm, cnm2 = 'Periodo',grnm = gnm,fn = fnn,scale=FALSE)
map(names(Data.rk.at), function(x){
RA.data<-Data.rk.at[[x]]
plotRnkAb(RA.data,gnm,"Cob_Period",x)
})
kpv<-c(kpv,'Data.rk.a','Data.rk.c','Data.rk.pf','Data.rk.rh','Data.rk.sl')
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))

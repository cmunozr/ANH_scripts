})
names(Data.ee.oo2)<-names(Data.ee.oo)
map(names(Data.ee.oo),function(xx){
fnm2<-paste(gnm,ctnm,xx,sep='_')
v<-Data.ee.oo2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,ctnm,v)
return()
})
kpv<-c(kpv,'Data.ee.oo')
##Plataforma
Data.ee.pt<-Data.a.f('Plataf',fnn,scale=FALSE)
write.csv(Data.ee.pt[[1]],file.path(WDOut,"species_plataf.csv"))
Data.ee.pt2<-map(names(Data.ee.pt),function(xx){
x<-Data.ee.pt[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.pt2)<-names(Data.ee.pt)
map(names(Data.ee.pt),function(xx){
fnm2<-paste(gnm,'Plataf',xx,sep='_')
v<-Data.ee.pt2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,'Plataf',v)
return()
})
##Cobertura
Data.ee.hb<-Data.a.f('Cobertura',fnn)
Data.ee.hb2<-map(names(Data.ee.hb),function(xx){
x<-Data.ee.hb[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.hb2)<-names(Data.ee.hb)
map(names(Data.ee.hb),function(xx){
fnm2<-paste(gnm,'Cobertura',xx,sep='_')
v<-Data.ee.hb2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,'Cobertura',v)
return()
})
kpv<-c(kpv,'Data.ee.hb')
#All
rm(list=ls()[!ls()%in%kpv])
#Aves2
ommt<-c()
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380")
#ctnm
Data.ei.oo<-Data.i.f(ctnm)
Data.ei.oo2<-iNEXT(Data.ei.oo,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm,ctnm,sep='_')
PrintggiNextInc(fnm2,Data.ei.oo2)
fnm2<-paste(gnm,ctnm,'Inc',sep='_')
PrintRefiNext(fnm2,ctnm,Data.ei.oo2)
kpv<-c(kpv,'Data.ei.oo')
#plataforma
Data.ei.pt<-Data.i.f('Plataf')
Data.ei.pt2<-iNEXT(Data.ei.pt,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm, 'Plataf',sep='_')
PrintggiNextInc(fnm2,Data.ei.pt2)
fnm2<-paste(gnm,'Plataf','Inc',sep='_')
PrintRefiNext(fnm2,'Plataf',Data.ei.pt2)
kpv<-c(kpv,'Data.ei.pt2')
#Cobertura
Data.ei.hb<-Data.i.f('Cobertura')
Data.ei.hb2<-iNEXT(Data.ei.hb,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm, 'Cobertura',sep='_')
PrintggiNextInc(fnm2,Data.ei.hb2)
fnm2<-paste(gnm,'Cobertura','Inc',sep='_')
PrintRefiNext(fnm2,'Cobertura',Data.ei.hb2)
kpv<-c(kpv,'Data.ei.hb2')
rm(list=ls()[!ls()%in%kpv])
# All
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#4) Hills by MU
rowSums(table(Data.r$parentEventID,Data.r$organismQuantity))
#Aves
ommt<-c("") #method to be omitted
ompv<-c("ANH_380","ANH_64","ANH_65") #does not have covariates
#Aves2
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380", "ANH_64","ANH_65")
Data.ee.mm0<-Data.a.MU(DataP = Data.r,evID = 'parentEventID',
expPEID = "^(ANH_[0-9]+)(_.*)$",fn = fnn, scale=FALSE)
Data.ee.mm<-map(names(Data.ee.mm0),function(x){
xx<-Data.ee.mm0[[x]]
y<-CompletEmpty(xx,'parentEventID',UME,x)
})
names(Data.ee.mm)<-names(Data.ee.mm0)
kpv<-c(kpv,'Data.ee.mm')
rm(list=ls()[!ls()%in%kpv])
#4b) Hills by sub-MU with abundance
rowSums(table(Data.r$eventID,Data.r$organismQuantity))
#Aves2
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380", "ANH_64","ANH_65")
Data.ee.nn0<-Data.a.MU(Data.r,'eventID',"^(ANH_[0-9]+)(_.*)$",fnn,scale=FALSE)
Data.ee.nn<-map(names(Data.ee.nn0),function(x){
xx<-Data.ee.nn0[[x]]
y<-CompletEmpty(xx,'eventID',SbUME,x)
#shorter names for coprofagos
#y$eventID<-gsub("(ANH_[0-9]+)(_T. Exc. Human)([0-9]+)(_2021-)([0-9]+-[0-9]+)(/.*)","\\1_\\3/\\5",y$eventID)
return(y)
})
names(Data.ee.nn)<-names(Data.ee.nn0)
kpv<-c(kpv,'Data.ee.nn')
rm(list=ls()[!ls()%in%kpv])
#Aves2
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380",
"ANH_64","ANH_65")
schtxt<-""
library(lubridate)
Data.pr<-Data.r%>%
mutate('eventPer'=hour(as.POSIXct(Data.r$eventTime,format="%H:%M:%S")))
Data.pr$eventPer[Data.pr$eventPer<18|Data.pr$eventPer>21]<-21
Data.pr$eventPer<-paste(Data.pr$parentEventID,Data.pr$eventPer,sep='_')
Data.pr<-Data.pr[,names(Data.pr)!='eventID']
#Aves2
Data.pr<-Data.r%>%
mutate('eventPer'=gsub(schtxt,"_",eventID))
Data.ee.tt<-Data.a.MU(Data.pr,'eventPer',"^(ANH_[0-9]+)(_.*)$",fnn)
kpv<-c(kpv,'Data.ee.tt','schtxt')
rm(list=ls()[!ls()%in%kpv])
#Aves2
ommt<-c("Recorrido en lancha","Recorrido Libre", "Accidental")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380", "ANH_64","ANH_65")
# All
Data.pt<-Data.r%>%
filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
nsp<-length(unique(Data.pt$parentEventID))
#Aves
grp<-list('PntFijo'=c('Punto Fijo'),
'PntFijo_RdNiebla'=c('Punto Fijo', "Redes de Niebla"))
Data.ee.pr<-Data.a.pt(grp,Data.pt,'eventID',fnn,scale=TRUE) #cambiar ID dependiendo de registros
#Aves
Data.ee.prr<-Data.i.pr(Data.ee.pr,grp,'parentEventID',
expPEID='^(ANH_[0-9]+)(_.*)$',
c('Punto Fijo'))
#All
cov.1<-cov%>%filter(parentEventID%in%Data.ee.prr$parentEventID)%>%
distinct(parentEventID,.keep_all=T)%>%dplyr::select(-c('eventID'))
Data.ee.prr<-Data.ee.prr%>%
inner_join(.,cov.1, by="parentEventID")
write.csv(Data.ee.prr,file.path(WDOut,'CurvasDiversidad',
paste(gnm,'_','MU_Inc_Estim_Grp.csv',sep='')))
kpv<-c(kpv,'Data.ee.pr','Data.ee.prr','grp')
rm(list=ls()[!ls()%in%kpv])
#Aves2
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380", "ANH_64","ANH_65")
Data.pr<-Data.r%>%
mutate('eventPer'=gsub(schtxt,"_",eventID))%>%dplyr::select(-eventID) #Peces _
Data.ei.t<-Data.a.pt(grp,Data.pr,'eventPer',fn="sum")
Data.ei.ttt<-Data.a.t(Data.ei.t,'evenPer',grp,samEff.ttt,c("Punto Fijo", "Redes de Niebla"))
write.csv(Data.ei.ttt,file.path(WDOut,'CurvasDiversidad', paste(gnm,'_','SubTempMU_Estim_Grp.csv',sep='')))
kpv<-c(kpv,'Data.ei.t','Data.ei.ttt')
rm(list=ls()[!ls()%in%kpv])
load("kpv_temp.RData")
outD<-'Aves_T2'#'Zooplancton' #master folder for output
outDD<-'Aves'#'Hidrobiologicos' #Grupo like stated in the covariate file
ctnm<- "CobAves" # 'waterBody' #CobColl'#"CuerpAgua" #main factor for anÃ¡lisis
gnm<- 'Ave' #'Coll'#"Zoop" #group prefix
fnn<-"sum" #function to aggregate samples within sampling unites
WDOut<-file.path(getwd(), "Analisis", "SalidasPreliminares")
dir.create(file.path(WDOut,outD), showWarnings = F)
WDOut<-file.path(WDOut,outD)
WDIn<-file.path(getwd(), "Analisis",'Matrices_Abundancia')
WDIn2<-file.path(getwd(), "Analisis",'Datos_Finales')
WDCov<-file.path(getwd(), "Analisis",'Covariables')
WDFunc<-file.path(getwd())
#create subdirectories
dir.create(file.path(WDOut,'CurvasDiversidad'), showWarnings = F)
dir.create(file.path(WDOut,'CurvasRank'), showWarnings = F)
dir.create(file.path(WDOut,'Covariables_PCA'), showWarnings = F)
dir.create(file.path(WDOut,'NMDS'), showWarnings = F)
dir.create(file.path(WDOut,'RDA'), showWarnings = F)
#0c) functions
source(file.path(WDFunc,'R/ANH_procAbu_functions.R'))
Data.et<-read.xlsx(file.path(getwd(),"data", "aves", "I2D-BIO_2021_050_v3_T2.xlsx"),
sheet="Eventos", startRow = 1, na.strings = "N/A")
# MISSING IFS
#coprofagos_adultos
Data.et<-Data.et[Data.et$samplingProtocol=='Trampa de excremento humano',]
#Coprofagos_larvas
Data.et<-Data.et[Data.et$samplingProtocol=='Captura manual'&is.na(Data.et$EventRemaks),]
Data.et<-read.xlsx(file.path(getwd(),"data", "aves", "I2D-BIO_2021_050_v3_T2.xlsx"),
sheet="Eventos", startRow = 1, na.strings = "N/A")
#All
Data.et$eventID<-gsub('-','_',Data.et$eventID)
Data.r<-read.xlsx(file.path(getwd(),"data", "aves", "I2D-BIO_2021_050_v3_T2.xlsx"),
sheet="Registro", startRow = 1, na.strings = "N/A")
#All
Data.r$eventID<-gsub('-','_',Data.r$eventID)
# identificationQualifier is used when we can't arrive to specific epithets of species
# used with fishes for example but not with birds
if(!is.null(Data.r$identificationQualifier)){
Data.r$identificationQualifier<-tolower(Data.r$identificationQualifier)
}
library(Hmisc)
Data.r$scientificName[grep('^[[:lower:]]{1}',Data.r$scientificName)]<-
capitalize(Data.r$scientificName[grep('^[[:lower:]]', Data.r$scientificName)])
#All
#Estimate unique data
selr<-unique(Data.r$eventID)
SbUME<-Data.et$eventID[which(!Data.et$eventID%in%selr)] #Data with zero records
SbUMT<-unique(Data.et$eventID)
#All
kpv<-c(kpv,c('Data.et','Data.r','SbUME','SbUMT','Data.rs'))
#All
#UM  empty
Data.r$parentEventID <- gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)
UM<-unique(Data.r$parentEventID)
UME<-setdiff(unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)), UM)
UMT<-unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", SbUMT))
kpv<-c(kpv,c('UM','UME','UMT'))
#All
# Complete columns in Data.r that are in Data.e.
Data.r <- complete_cols(BD_registros = Data.r, BD_eventos = Data.et,  link = "eventID",
vector_cols = c("samplingProtocol"))#
library(stringi)
Data.et$samplingProtocol <- trimws(Data.et$samplingProtocol)
Data.r$samplingProtocol <- trimws(Data.r$samplingProtocol)
Data.et$samplingProtocol <- homolog_factors(Data.et, column = "samplingProtocol")
Data.r$samplingProtocol <- homolog_factors(Data.r, column = "samplingProtocol")
#Data.r$habitat<-trimws(Data.r$habitat)
Data.r$organismQuantity<-as.numeric(Data.r$organismQuantity)
Data.et$samplingEffort[is.na(Data.et$samplingEffort)]<-0
unique(Data.et$samplingProtocol)
unique(Data.r$samplingProtocol)
### This applies for birds###
if(outD == "Aves"){
names(Data.et)[2]<-'parentEventID'
}
#All
unique(Data.r$samplingProtocol)
Data.e<-Data.et[Data.et$eventID%in%selr,] #only those records with data
#2c) group environment
#All
#section to verify that names of the columns is consistent
cnm.smp<-c("samplingEffort","samplingProtocol") #from data
kpv<-c(kpv,c('Data.e','ctnm','fnn','cnm.smp','gnm'))
Data.r$scientificName_2<-trimws(Data.r$scientificName)
# identificationQualifier is used when we can't arrive to specific epithets of species
# used with fishes for example but not with birds
if(!is.null(Data.r$identificationQualifier)){
selrnm<-!is.na(Data.r$identificationQualifier)
Data.r$scientificName_2[selrnm]<-paste(Data.r$scientificName[selrnm],
trimws(Data.r$identificationQualifier[selrnm]))
}
#All
unique(Data.r$scientificName_2)
shrscitf<-gsub("^([[:alpha:]]{4}).*([[:space:]])([[:alpha:]]{4}).*$","\\1_\\3",
unique(Data.r$scientificName_2))
dupl<-which(shrscitf%in%shrscitf[duplicated(shrscitf)])
duplsp<-unique(Data.r$scientificName_2)[dupl]
print(duplsp)
Data.r[Data.r$scientificName_2%in%duplsp[3:4],c('scientificName','scientificName_2')]
# All
# others
covbk<-covbk[covbk$parentEventID%in%UMT,] #gets covariates on all UM
#All
cov<-covbk
kpv<-c(kpv,c('cov'))
# modify gsub searching character
samEff.t<-Data.et[,c('parentEventID',cnm.smp)] %>% na.omit(.)%>%
dplyr::mutate(samplEff=as.numeric(gsub("([0-9]+\\.*[0-9]+).*$",'\\1',samplingEffort)))%>%
dplyr::group_by(parentEventID,get(cnm.smp[2]))%>%
dplyr::summarize(samplEff=sum(samplEff),Num_ev=dplyr::n())
#All
colnames(samEff.t)[1:2]<-c('parentEventID',cnm.smp[2])
sameEff.tt<-split(samEff.t,as.factor(samEff.t$samplingProtocol))
library(vegan)
samEff.ttt<-purrr::map(sameEff.tt, function(x) data.frame(as.data.frame(x),
decostand(as.vector(x[,"samplEff"]),"max")))
kpv<-c(kpv,'samEff.ttt')
rm(list=ls()[!ls()%in%kpv])
modify_event_label <- function(data, column = "eventID"){
require(stringr)
original <- data[,column]
splitted <- original%>% str_split(., "_")
index_vect <- lapply(X= splitted, FUN = function(X){length(X)>=5}) %>% unlist()
if(sum(index_vect) != 0 ){
print("modifying")
modified <- lapply(X = splitted[index_vect], FUN = function(X){X[1:4]} %>% paste(., collapse = "_")) %>% unlist()
original[index_vect] <- modified
data[,column] <- original
}else{
print("no changes")
}
return(data)
}
##
#All
#function for modyfing eventID from 5 or more labels to 4 in order to match with eventID from eventos database
Data.r <- modify_event_label(data = Data.r)
#3a) Diversity by method: abundance
#Regional Diversity
table(Data.r$parentEventID,Data.r$samplingProtocol)
rowSums(table(Data.r$parentEventID,Data.r$samplingProtocol))
#Aves2
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
# All
Data.r2<-Data.r %>% dplyr::filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
nsp<-unique(Data.r2$parentEventID)
nsp<-length(!nsp%in%ompv)
library(tidyr)
Data.ee.r<-Data.r2%>%
dplyr::select(parentEventID,organismQuantity,samplingProtocol,scientificName_2)%>%
pivot_wider(names_from=parentEventID,values_from=organismQuantity,
values_fn=sum,values_fill=0)%>%
dplyr::mutate(TotAbu=rowSums(.[,3:(nsp+2)]),.keep="unused")%>%
dplyr::select(scientificName_2,samplingProtocol,TotAbu)
#others without zeros in the dataframe
library(tibble)
Data.ee.r<-Data.ee.r%>%pivot_wider(.,names_from=samplingProtocol,values_from=TotAbu, values_fn=sum,values_fill=0)%>%
column_to_rownames(.,var="scientificName_2")%>%as.list(.)
# All
library(iNEXT)
library(dplyr)
Hill.r<-iNEXT(Data.ee.r,q=c(0,1,2),datatype = "abundance")
PrintggiNext(paste(gnm,'_abM',sep=''),Hill.r)
kpv<-c(kpv,'Hill.r','Data.ee.r')
rm(list=ls()[!ls()%in%kpv])
#Aves2
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3")
Data.r2<-Data.r%>%filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
Data.ii.r<-Data.r2%>%
dplyr::select(parentEventID,organismQuantity,scientificName_2)%>%
pivot_wider(names_from=parentEventID,values_from=organismQuantity, values_fn=sum,values_fill=0)%>%
mutate_if(is.numeric,~1*(.>0))%>%column_to_rownames(.,var="scientificName_2")%>%list(.)
Hill.rr<-iNEXT(Data.ii.r,q=c(0,1,2),datatype = "incidence_raw")
names(Hill.rr$iNextEst)<-"Regional"
PrintggiNext(paste(gnm,'_incO',sep=''),Hill.rr)
kpv<-c(kpv,'Hill.rr')
rm(list=ls()[!ls()%in%kpv])
#Aves2
ommt<-c("Recorrido en lancha", "Recorrido Libre", "Accidental")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380")
# ctnm
Data.ee.oo<-Data.a.f(catnm = ctnm, fn="sum",scale=TRUE) #scale is used for groups non-integer abundance
map(names(Data.ee.oo), function (x){
write.csv(Data.ee.oo[[x]],file.path(WDOut,
paste("species_HabHomolog", x,".csv", sep="")))
})
Data.ee.oo2<-map(names(Data.ee.oo),function(xx){
x<-Data.ee.oo[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.oo2)<-names(Data.ee.oo)
map(names(Data.ee.oo),function(xx){
fnm2<-paste(gnm,ctnm,xx,sep='_')
v<-Data.ee.oo2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,ctnm,v)
return()
})
kpv<-c(kpv,'Data.ee.oo')
##Plataforma
Data.ee.pt<-Data.a.f('Plataf',fnn,scale=FALSE)
write.csv(Data.ee.pt[[1]],file.path(WDOut,"species_plataf.csv"))
Data.ee.pt2<-map(names(Data.ee.pt),function(xx){
x<-Data.ee.pt[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.pt2)<-names(Data.ee.pt)
map(names(Data.ee.pt),function(xx){
fnm2<-paste(gnm,'Plataf',xx,sep='_')
v<-Data.ee.pt2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,'Plataf',v)
return()
})
kpv<-c(kpv,'Data.ee.pt','Data.ee.pts')
##Cobertura
Data.ee.hb<-Data.a.f('Cobertura',fnn)
Data.ee.hb2<-map(names(Data.ee.hb),function(xx){
x<-Data.ee.hb[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.hb2)<-names(Data.ee.hb)
map(names(Data.ee.hb),function(xx){
fnm2<-paste(gnm,'Cobertura',xx,sep='_')
v<-Data.ee.hb2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,'Cobertura',v)
return()
})
kpv<-c(kpv,'Data.ee.hb')
#All
rm(list=ls()[!ls()%in%kpv])
#Aves2
ommt<-c()
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380")
#ctnm
Data.ei.oo<-Data.i.f(ctnm)
Data.ei.oo2<-iNEXT(Data.ei.oo,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm,ctnm,sep='_')
PrintggiNextInc(fnm2,Data.ei.oo2)
fnm2<-paste(gnm,ctnm,'Inc',sep='_')
PrintRefiNext(fnm2,ctnm,Data.ei.oo2)
kpv<-c(kpv,'Data.ei.oo')
#plataforma
Data.ei.pt<-Data.i.f('Plataf')
Data.ei.pt2<-iNEXT(Data.ei.pt,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm, 'Plataf',sep='_')
PrintggiNextInc(fnm2,Data.ei.pt2)
fnm2<-paste(gnm,'Plataf','Inc',sep='_')
PrintRefiNext(fnm2,'Plataf',Data.ei.pt2)
kpv<-c(kpv,'Data.ei.pt2')
#Cobertura
Data.ei.hb<-Data.i.f('Cobertura')
Data.ei.hb2<-iNEXT(Data.ei.hb,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm, 'Cobertura',sep='_')
PrintggiNextInc(fnm2,Data.ei.hb2)
fnm2<-paste(gnm,'Cobertura','Inc',sep='_')
PrintRefiNext(fnm2,'Cobertura',Data.ei.hb2)
kpv<-c(kpv,'Data.ei.hb2')
rm(list=ls()[!ls()%in%kpv])
# All
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#4) Hills by MU
rowSums(table(Data.r$parentEventID,Data.r$organismQuantity))
#Aves2
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380", "ANH_64","ANH_65")
Data.ee.mm0<-Data.a.MU(DataP = Data.r,evID = 'parentEventID',
expPEID = "^(ANH_[0-9]+)(_.*)$",fn = fnn, scale=FALSE)
Data.ee.mm<-map(names(Data.ee.mm0),function(x){
xx<-Data.ee.mm0[[x]]
y<-CompletEmpty(xx,'parentEventID',UME,x)
})
names(Data.ee.mm)<-names(Data.ee.mm0)
kpv<-c(kpv,'Data.ee.mm')
rm(list=ls()[!ls()%in%kpv])
#4b) Hills by sub-MU with abundance
rowSums(table(Data.r$eventID,Data.r$organismQuantity))
#Aves2
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380", "ANH_64","ANH_65")
Data.ee.nn0<-Data.a.MU(Data.r,'eventID',"^(ANH_[0-9]+)(_.*)$",fnn,scale=FALSE)
Data.ee.nn<-map(names(Data.ee.nn0),function(x){
xx<-Data.ee.nn0[[x]]
y<-CompletEmpty(xx,'eventID',SbUME,x)
#shorter names for coprofagos
#y$eventID<-gsub("(ANH_[0-9]+)(_T. Exc. Human)([0-9]+)(_2021-)([0-9]+-[0-9]+)(/.*)","\\1_\\3/\\5",y$eventID)
return(y)
})
names(Data.ee.nn)<-names(Data.ee.nn0)
kpv<-c(kpv,'Data.ee.nn')
rm(list=ls()[!ls()%in%kpv])
#Aves2
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380",
"ANH_64","ANH_65")
schtxt<-""
#Aves2
Data.pr<-Data.r%>%
mutate('eventPer'=gsub(schtxt,"_",eventID))
#All
#Others
Data.pr<-Data.r%>%
mutate('eventPer'=gsub(schtxt,"_",eventID))%>%dplyr::select(-eventID)
Data.ee.tt<-Data.a.MU(Data.pr,'eventPer',"^(ANH_[0-9]+)(_.*)$",fnn)
kpv<-c(kpv,'Data.ee.tt','schtxt')
#Aves2
Data.pr<-Data.r%>%
mutate('eventPer'=gsub(schtxt,"_",eventID))
Data.ee.tt<-Data.a.MU(Data.pr,'eventPer',"^(ANH_[0-9]+)(_.*)$",fnn)
kpv<-c(kpv,'Data.ee.tt','schtxt')
rm(list=ls()[!ls()%in%kpv])
#Aves2
ommt<-c("Recorrido en lancha","Recorrido Libre", "Accidental")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380", "ANH_64","ANH_65")
# All
Data.pt<-Data.r%>%
filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
nsp<-length(unique(Data.pt$parentEventID))
#Aves
grp<-list('PntFijo'=c('Punto Fijo'),
'PntFijo_RdNiebla'=c('Punto Fijo', "Redes de Niebla"))
Data.ee.pr<-Data.a.pt(grp,Data.pt,'eventID',fnn,scale=TRUE) #cambiar ID dependiendo de registros
#Aves
Data.ee.prr<-Data.i.pr(Data.ee.pr,grp,'parentEventID',
expPEID='^(ANH_[0-9]+)(_.*)$',
c('Punto Fijo'))
#All
cov.1<-cov%>%filter(parentEventID%in%Data.ee.prr$parentEventID)%>%
distinct(parentEventID,.keep_all=T)%>%dplyr::select(-c('eventID'))
Data.ee.prr<-Data.ee.prr%>%
inner_join(.,cov.1, by="parentEventID")
write.csv(Data.ee.prr,file.path(WDOut,'CurvasDiversidad',
paste(gnm,'_','MU_Inc_Estim_Grp.csv',sep='')))
kpv<-c(kpv,'Data.ee.pr','Data.ee.prr','grp')
rm(list=ls()[!ls()%in%kpv])
#Aves2
ommt<-c("")
ompv<-c("ANH_220", "ANH_250", "ANH_274", "ANH_279", "ANH_213_A_P3", "ANH_380", "ANH_64","ANH_65")
Data.pr<-Data.r%>%
mutate('eventPer'=gsub(schtxt,"_",eventID))%>%dplyr::select(-eventID) #Peces _
Data.ei.t<-Data.a.pt(grp,Data.pr,'eventPer',fn="sum")
Data.ei.ttt<-Data.a.t(Data.ei.t,'evenPer',grp,samEff.ttt,c("Punto Fijo", "Redes de Niebla"))
write.csv(Data.ei.ttt,file.path(WDOut,'CurvasDiversidad', paste(gnm,'_','SubTempMU_Estim_Grp.csv',sep='')))
kpv<-c(kpv,'Data.ei.t','Data.ei.ttt')
rm(list=ls()[!ls()%in%kpv])

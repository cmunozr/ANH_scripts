'SatO2','SolidDis','COrgT','FDisp','Magnesio','Calcio',
'Sodio','TSolidDis','SoliTot','SoliSus','SoliSol','Fosfatos',
'Nitratos','Silicatos','GrasAceit','SAAM','DurCalcica','DurTotal',
'Alcalinid','sed_p_Arena','sed_p_Arcilla','sed_p_limo','sed_class',
'sed_p_COrg','sed_fosforo','sed_Magnes','sed_calcio','sed_Sodio',
'sed_boro','sed_hierro','sed_Nitrog',
'Pgras','Mflot','Vacuat','Vrip','CDosel')
#transformation
CovM$Log_Cond<-log10(CovM$Cond)
CovM[is.na(CovM)]<-0
v.msiteQA<-c('Temp','pH','OxgD','Cond',
'SatO2','SolidDis','COrgT','FDisp','Magnesio','Calcio',
'Sodio','TSolidDis','SoliTot','SoliSus','SoliSol','Fosfatos',
'Nitratos','Silicatos','GrasAceit','SAAM','DurCalcica','DurTotal',
'Alcalinid','Log_Cond')
v.msiteQS<-c('sed_p_Arena','sed_p_Arcilla','sed_p_limo','sed_p_COrg',
'sed_fosforo','sed_Magnes','sed_calcio','sed_Sodio',
'sed_boro','sed_hierro','sed_Nitrog')
v.msiteF<-c('Bloques','Cantos.rodados','Guijarros','Grava','Pgras','Mflot','Vacuat','Vrip','CDosel','ProfProm','Ancho',
'ProfSechi','ProfCapFot')
library(Hmisc)
MQA<-CovM%>%dplyr::select(all_of(v.msiteQA))%>%na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MQA<-lapply(MQA,function(x){
x[is.na(x)]<-0
return(x)
}
)
library(corrplot)
corrplot(MQA$r,type="upper", order="hclust",
p.mat = MQA$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_QAgua',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MQA$r,type="upper", order="hclust",
p.mat = MQA$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
v.msiteQA<-c('Temp','OxgD',
'COrgT','FDisp',
'TSolidDis',
'Nitratos','Silicatos','GrasAceit','SAAM',
'Alcalinid','Log_Cond')
MQS<-CovM %>% dplyr::select(all_of(v.msiteQS)) %>% na.omit(.) %>% as.matrix(.) %>% rcorr(.)
MQS<-lapply(MQS,function(x){
x[is.na(x)]<-0
return(x)
}
)
corrplot(MQS$r,type="upper", order="hclust",
p.mat = MQS$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_QSedim',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MQS$r,type="upper", order="hclust",
p.mat = MQS$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
v.msiteQS<-c("sed_Nitrog","sed_p_limo","sed_fosforo","sed_Sodio",
"sed_hierro","sed_Magnes") #c("sed_Nitrog","sed_p_limo","sed_fosforo","sed_calcio",
#"sed_hierro","sed_Magnes")
MF<-CovM%>%dplyr::select(all_of(v.msiteF))%>%na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MF<-lapply(MF,function(x){x[is.na(x)]<-0
return(x)})
corrplot(MF$r,type="upper", order="hclust",
p.mat = MF$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_Struct',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MF$r,type="upper", order="hclust",
p.mat = MF$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
# for(i in v.msiteF){
#   hist(CovM[,i],main=i)
#   readline(prompt='ENTER')
# }
v.msiteF<-v.msiteF[!v.msiteF%in%c("Bloques","Guijarros","Pgras","Mflot","Vacuat","Arena","ProfSechi")]
MT<-CovM%>%dplyr::select(all_of(v.msiteF), all_of(v.msiteQA),all_of(v.msiteQS))%>%
na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MT<-lapply(MT,function(x){x[is.na(x)]<-0
return(x)})
corrplot(MT$r,type="upper", order="hclust",
p.mat = MT$P, sig.level = 0.01, insig = "blank",tl.col='black',
na.label.col = 'black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_FinalV',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MT$r,type="upper", order="hclust",
p.mat = MT$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
covbk<-CovM%>%dplyr::select(parentEventID,eventID,
all_of(v.msiteQA),all_of(v.msiteQS),all_of(v.msiteF),
all_of(cat.c),all_of(spa.c),all_of(v.pres),all_of(v.rec))
##Final Covariables
covbk$eventID<-gsub('-','_',covbk$eventID)
covbk$eventID<-gsub('ANH_','ANH',covbk$eventID)
covbk$eventID<-gsub('ANH','ANH_',covbk$eventID)
v.msite<-c(v.msiteQA,v.msiteQS,v.msiteF)
}
# All
kpv<-c(ls(),'kpv') #variables to keep all the time
save.image(file = "kpv_temp.RData")
Data.et<-read.xlsx(file.path(getwd(),"data", "peces", "plantilla_T1.xlsx"),
sheet="Eventos", startRow = 1, na.strings = "N/A")
#All
Data.et$eventID<-gsub('-','_',Data.et$eventID)
Data.r<-read.xlsx(file.path(getwd(),"data", "peces", "plantilla_T1.xlsx"),
sheet="Registros_diurno", startRow = 1, na.strings = "N/A")
Data.r<-read.xlsx(file.path(getwd(),"data", "peces", "peces_ANH_diurnos.xlsx"),
sheet="Registros", startRow = 1, na.strings = "N/A")
Data.r<-read.xlsx(file.path(getwd(),"data", "peces", "peces_ANH_diurno_T1.xlsx"),
sheet="Registros", startRow = 1, na.strings = "N/A")
Data.et<-read.xlsx(file.path(getwd(),"data", "peces", "Peces_ANH_diurno_T1.xlsx"),
sheet="Eventos", startRow = 1, na.strings = "N/A")
#All
Data.et$eventID<-gsub('-','_',Data.et$eventID)
covbk<- openxlsx::read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag140722.xlsx")),
sheet = 1)
covbk$FInt19meanx<-round(as.numeric(covbk$FInt19meanx),2)
names(covbk)[c(2,23,24:31,39,40)]<-c('parentEventID','Cobertura','CobAves',
'CobHerp','CobCopr','CobMarip',
'CobHorm','CobColl','CobMam','CobBot','CuerpAgua','NomCuerpAg')
for(i in c('Cobertura','CobAves','CobHerp','CuerpAgua','CobCopr','CobMarip',
'CobHorm','CobMam','CobBot','COBXCollembola')){
ccov<-covbk[,i]
ccov[ccov=="Bosque denso"]<-"Bosque Denso"
ccov[ccov=="Ci?naga"]<-"Cienaga"
ccov[ccov=="Herbazales"]<-"Herbazal"
ccov[ccov=="Cienagas"]<-"Cienaga"
ccov[ccov=="V?as"]<-"Vias"
ccov[ccov=="R?o Magdalena"]<-"R_Magdal"
ccov[ccov=="Bosque ripario"]<-"Bosque Ripario"
ccov[ccov=="Bosque abierto"]<-"Bosque Abierto"
ccov[ccov=="Pastos limpios"]<-"Pastos"
covbk[,i]<-ccov
}
covbk$Cobertura<-factor(covbk$Cobertura,levels=c("Rios","Cienaga","Zonas Pantanosas","Otros Cuerpos Agua",
"Herbazal","Bosque Ripario",
"Bosque Denso","Bosque Abierto","Vegetacion Secundaria",
"Palma","Cultivos","Pastos","Zonas Desnudas Degradadas",
"Vias","Area Urbana"))
spa.c<-c("decimalLat","decimalLon")
#peces; c("Plataf","Red.Hidrica","CuerpAgua") #colembolos: c("Plataf","CobColl","habitat","UCSuelo")
#Coprofagos ad: c("Plataf","CobCopr") # #Coprofagos lv: c("Plataf", "CobCopr", "UCSuelo")
#Hidrobiol?gicos=c("Plataf","Red.Hidrica","CuerpAgua")#,"CobHerp")
# Aves: c("Plataf", "CobAves") #anfibios: c("Plataf", "CobHerp")
# Mamiferos: c("Plataf", "CobMam")
cat.c <- c("Plataf","Red.Hidrica","CuerpAgua")
v.pres<-c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")#,"HEH18meanx")
v.rec<-c("Dis_Cienag","Dis_MGSG","Dis_Dre345", "DisBosque","Dis_CobNat","Tam_Parche")#,"FInt19meanx")
v.msite<-NULL
excl<-NULL
for (i in c(v.pres,v.rec)){
if(all(is.na(covbk[,i]))) excl<-c(excl,i)
}
v.pres<-v.pres[!v.pres%in%excl]
v.rec<-v.rec[!v.rec%in%excl]
#not for coprofagos
if(outDD != "Escarabajos"){
covbk$parentEventID<-trimws(gsub("-","_",covbk$parentEventID))
covbk$eventID<-trimws(gsub("-","_",covbk$eventID))
unique(covbk$GrupoBiolo)
}
GrupoBiolo
outDD
outDD
outD<-'Peces_diurnos'#'Zooplancton' #master folder for output
outDD<-'Peces'#'Hidrobiologicos' #Grupo like stated in the covariate file
ctnm<- "CuerpAgua" #"CobMam" # 'waterBody' #CobColl'#"CuerpAgua" #reptiles y anfibios: CobHerp #escarabajos coprofagos: "CobCopr" #main factor for anÃ¡lisis
gnm<- 'Pec' #'Coll'#"Zoop" #group prefix
fnn<-"sum" #function to aggregate samples within sampling unites
WDOut<-file.path(getwd(), "Analisis", "SalidasPreliminares")
dir.create(file.path(WDOut,outD), showWarnings = F)
WDOut<-file.path(WDOut,outD)
WDIn<-file.path(getwd(), "Analisis",'Matrices_Abundancia')
WDIn2<-file.path(getwd(), "Analisis",'Datos_Finales')
WDCov<-file.path(getwd(), "Analisis",'Covariables')
WDFunc<-file.path(getwd())
#create subdirectories
dir.create(file.path(WDOut,'CurvasDiversidad'), showWarnings = F)
dir.create(file.path(WDOut,'CurvasRank'), showWarnings = F)
dir.create(file.path(WDOut,'Covariables_PCA'), showWarnings = F)
dir.create(file.path(WDOut,'NMDS'), showWarnings = F)
dir.create(file.path(WDOut,'RDA'), showWarnings = F)
#0c) functions
source(file.path(WDFunc,'R/ANH_procAbu_functions.R'))
covbk<- openxlsx::read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag140722.xlsx")),
sheet = 1)
covbk$FInt19meanx<-round(as.numeric(covbk$FInt19meanx),2)
names(covbk)[c(2,23,24:31,39,40)]<-c('parentEventID','Cobertura','CobAves',
'CobHerp','CobCopr','CobMarip',
'CobHorm','CobColl','CobMam','CobBot','CuerpAgua','NomCuerpAg')
for(i in c('Cobertura','CobAves','CobHerp','CuerpAgua','CobCopr','CobMarip',
'CobHorm','CobMam','CobBot','COBXCollembola')){
ccov<-covbk[,i]
ccov[ccov=="Bosque denso"]<-"Bosque Denso"
ccov[ccov=="Ci?naga"]<-"Cienaga"
ccov[ccov=="Herbazales"]<-"Herbazal"
ccov[ccov=="Cienagas"]<-"Cienaga"
ccov[ccov=="V?as"]<-"Vias"
ccov[ccov=="R?o Magdalena"]<-"R_Magdal"
ccov[ccov=="Bosque ripario"]<-"Bosque Ripario"
ccov[ccov=="Bosque abierto"]<-"Bosque Abierto"
ccov[ccov=="Pastos limpios"]<-"Pastos"
covbk[,i]<-ccov
}
covbk$Cobertura<-factor(covbk$Cobertura,levels=c("Rios","Cienaga","Zonas Pantanosas","Otros Cuerpos Agua",
"Herbazal","Bosque Ripario",
"Bosque Denso","Bosque Abierto","Vegetacion Secundaria",
"Palma","Cultivos","Pastos","Zonas Desnudas Degradadas",
"Vias","Area Urbana"))
spa.c<-c("decimalLat","decimalLon")
#peces; c("Plataf","Red.Hidrica","CuerpAgua") #colembolos: c("Plataf","CobColl","habitat","UCSuelo")
#Coprofagos ad: c("Plataf","CobCopr") # #Coprofagos lv: c("Plataf", "CobCopr", "UCSuelo")
#Hidrobiol?gicos=c("Plataf","Red.Hidrica","CuerpAgua")#,"CobHerp")
# Aves: c("Plataf", "CobAves") #anfibios: c("Plataf", "CobHerp")
# Mamiferos: c("Plataf", "CobMam")
cat.c <- c("Plataf","Red.Hidrica","CuerpAgua")
v.pres<-c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")#,"HEH18meanx")
v.rec<-c("Dis_Cienag","Dis_MGSG","Dis_Dre345", "DisBosque","Dis_CobNat","Tam_Parche")#,"FInt19meanx")
v.msite<-NULL
excl<-NULL
for (i in c(v.pres,v.rec)){
if(all(is.na(covbk[,i]))) excl<-c(excl,i)
}
v.pres<-v.pres[!v.pres%in%excl]
v.rec<-v.rec[!v.rec%in%excl]
#not for coprofagos
if(outDD != "Escarabajos"){
covbk$parentEventID<-trimws(gsub("-","_",covbk$parentEventID))
covbk$eventID<-trimws(gsub("-","_",covbk$eventID))
unique(covbk$GrupoBiolo)
}
#not for coprofagos
if(outDD != "Escarabajos"){
covbk$parentEventID<-trimws(gsub("-","_",covbk$parentEventID))
covbk$eventID<-trimws(gsub("-","_",covbk$eventID))
unique(covbk$GrupoBiolo)
}
outDD
#others
covbk<-covbk%>%dplyr::filter(GrupoBiolo==outDD)
covbk<-covbk%>%dplyr::select(-c('Tipo','Habitat'))
if(outDD == "Peces"|outDD == "Microbiologicos"){
CovM<-read.xlsx(file.path(getwd(), 'Analisis','Covariables','Base De Datos Peces Fisico Quimicos 1212.xlsx'),sheet=1,startRow = 3 )
##check names##
names(CovM)[c(2,29:69,71,72,81:83)]<-c('parentEventID','CuerpAgua','NmCuerpAg','ProfProm','Ancho',
'ProfSechi','ProfCapFot','Temp','pH','OxgD','Cond',
'SatO2','SolidDis','COrgT','FDisp','Magnesio','Calcio',
'Sodio','TSolidDis','SoliTot','SoliSus','SoliSol','Fosfatos',
'Nitratos','Silicatos','GrasAceit','SAAM','DurCalcica','DurTotal',
'Alcalinid','sed_p_Arena','sed_p_Arcilla','sed_p_limo','sed_class',
'sed_p_COrg','sed_fosforo','sed_Magnes','sed_calcio','sed_Sodio',
'sed_boro','sed_hierro','sed_Nitrog',
'Pgras','Mflot','Vacuat','Vrip','CDosel')
#transformation
CovM$Log_Cond<-log10(CovM$Cond)
CovM[is.na(CovM)]<-0
v.msiteQA<-c('Temp','pH','OxgD','Cond',
'SatO2','SolidDis','COrgT','FDisp','Magnesio','Calcio',
'Sodio','TSolidDis','SoliTot','SoliSus','SoliSol','Fosfatos',
'Nitratos','Silicatos','GrasAceit','SAAM','DurCalcica','DurTotal',
'Alcalinid','Log_Cond')
v.msiteQS<-c('sed_p_Arena','sed_p_Arcilla','sed_p_limo','sed_p_COrg',
'sed_fosforo','sed_Magnes','sed_calcio','sed_Sodio',
'sed_boro','sed_hierro','sed_Nitrog')
v.msiteF<-c('Bloques','Cantos.rodados','Guijarros','Grava','Pgras','Mflot','Vacuat','Vrip','CDosel','ProfProm','Ancho',
'ProfSechi','ProfCapFot')
library(Hmisc)
MQA<-CovM%>%dplyr::select(all_of(v.msiteQA))%>%na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MQA<-lapply(MQA,function(x){
x[is.na(x)]<-0
return(x)
}
)
library(corrplot)
corrplot(MQA$r,type="upper", order="hclust",
p.mat = MQA$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_QAgua',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MQA$r,type="upper", order="hclust",
p.mat = MQA$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
v.msiteQA<-c('Temp','OxgD',
'COrgT','FDisp',
'TSolidDis',
'Nitratos','Silicatos','GrasAceit','SAAM',
'Alcalinid','Log_Cond')
MQS<-CovM %>% dplyr::select(all_of(v.msiteQS)) %>% na.omit(.) %>% as.matrix(.) %>% rcorr(.)
MQS<-lapply(MQS,function(x){
x[is.na(x)]<-0
return(x)
}
)
corrplot(MQS$r,type="upper", order="hclust",
p.mat = MQS$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_QSedim',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MQS$r,type="upper", order="hclust",
p.mat = MQS$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
v.msiteQS<-c("sed_Nitrog","sed_p_limo","sed_fosforo","sed_Sodio",
"sed_hierro","sed_Magnes") #c("sed_Nitrog","sed_p_limo","sed_fosforo","sed_calcio",
#"sed_hierro","sed_Magnes")
MF<-CovM%>%dplyr::select(all_of(v.msiteF))%>%na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MF<-lapply(MF,function(x){x[is.na(x)]<-0
return(x)})
corrplot(MF$r,type="upper", order="hclust",
p.mat = MF$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_Struct',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MF$r,type="upper", order="hclust",
p.mat = MF$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
# for(i in v.msiteF){
#   hist(CovM[,i],main=i)
#   readline(prompt='ENTER')
# }
v.msiteF<-v.msiteF[!v.msiteF%in%c("Bloques","Guijarros","Pgras","Mflot","Vacuat","Arena","ProfSechi")]
MT<-CovM%>%dplyr::select(all_of(v.msiteF), all_of(v.msiteQA),all_of(v.msiteQS))%>%
na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MT<-lapply(MT,function(x){x[is.na(x)]<-0
return(x)})
corrplot(MT$r,type="upper", order="hclust",
p.mat = MT$P, sig.level = 0.01, insig = "blank",tl.col='black',
na.label.col = 'black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_FinalV',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MT$r,type="upper", order="hclust",
p.mat = MT$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
covbk<-CovM%>%dplyr::select(parentEventID,eventID,
all_of(v.msiteQA),all_of(v.msiteQS),all_of(v.msiteF),
all_of(cat.c),all_of(spa.c),all_of(v.pres),all_of(v.rec))
##Final Covariables
covbk$eventID<-gsub('-','_',covbk$eventID)
covbk$eventID<-gsub('ANH_','ANH',covbk$eventID)
covbk$eventID<-gsub('ANH','ANH_',covbk$eventID)
v.msite<-c(v.msiteQA,v.msiteQS,v.msiteF)
}
# All
kpv<-c(ls(),'kpv') #variables to keep all the time
save.image(file = "kpv_temp.RData")
Data.et<-read.xlsx(file.path(getwd(),"data", "peces", "Peces_ANH_diurno_T1.xlsx"),
sheet="Eventos", startRow = 1, na.strings = "N/A")
#All
Data.et$eventID<-gsub('-','_',Data.et$eventID)
Data.r<-read.xlsx(file.path(getwd(),"data", "peces", "peces_ANH_diurno_T1.xlsx"),
sheet="Registros", startRow = 1, na.strings = "N/A")
#All
Data.r$eventID<-gsub('-','_',Data.r$eventID)
# identificationQualifier is used when we can't arrive to specific epithets of species
# used with fishes for example but not with birds
if(!is.null(Data.r$identificationQualifier)){
Data.r$identificationQualifier<-tolower(Data.r$identificationQualifier)
}
View(Data.r)
#pecesdiurnos
Data.r <- Data.r %>% rename("scientificName"= Nombre.de.la.especie, "CuerpAgua" = Tipo.de.cuerpo.de.agua,
"Plataf" = Plataforma, "eventTime" = dateIdentified)
View(Data.r)
library(Hmisc)
Data.r$scientificName[grep('^[[:lower:]]{1}',Data.r$scientificName)]<-
capitalize(Data.r$scientificName[grep('^[[:lower:]]', Data.r$scientificName)])
#All
#Estimate unique data
selr<-unique(Data.r$eventID)
# not coprofagos
SbUME<-Data.et$eventID[which(!Data.et$eventID%in%selr)] #Data with zero records
SbUMT<-unique(Data.et$eventID)
#All
kpv<-c(kpv,c('Data.et','Data.r','SbUME','SbUMT','Data.rs'))
#All
#UM  empty
Data.r$parentEventID <- gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)
UM<-unique(Data.r$parentEventID)
UME<-setdiff(unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)), UM)
UMT<-unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", SbUMT))
kpv<-c(kpv,c('UM','UME','UMT'))
View(Data.r)
View(Data.et)
View(Data.r)
#pecesdiurnos
Data.r <- Data.r %>% rename("scientificName"= Nombre.de.la.especie, "CuerpAgua" = Tipo.de.cuerpo.de.agua,
"Plataf" = Plataforma, "eventDate" = dateIdentified)
Data.r<-read.xlsx(file.path(getwd(),"data", "peces", "peces_ANH_diurno_T1.xlsx"),
sheet="Registros", startRow = 1, na.strings = "N/A")
#All
Data.r$eventID<-gsub('-','_',Data.r$eventID)
# identificationQualifier is used when we can't arrive to specific epithets of species
# used with fishes for example but not with birds
if(!is.null(Data.r$identificationQualifier)){
Data.r$identificationQualifier<-tolower(Data.r$identificationQualifier)
}
#pecesdiurnos
Data.r <- Data.r %>% rename("scientificName"= Nombre.de.la.especie, "CuerpAgua" = Tipo.de.cuerpo.de.agua,
"Plataf" = Plataforma, "eventDate" = dateIdentified)
library(Hmisc)
Data.r$scientificName[grep('^[[:lower:]]{1}',Data.r$scientificName)]<-
capitalize(Data.r$scientificName[grep('^[[:lower:]]', Data.r$scientificName)])
#All
#Estimate unique data
selr<-unique(Data.r$eventID)
# not coprofagos
SbUME<-Data.et$eventID[which(!Data.et$eventID%in%selr)] #Data with zero records
SbUMT<-unique(Data.et$eventID)
#All
kpv<-c(kpv,c('Data.et','Data.r','SbUME','SbUMT','Data.rs'))
#All
#UM  empty
Data.r$parentEventID <- gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)
UM<-unique(Data.r$parentEventID)
UME<-setdiff(unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)), UM)
UMT<-unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", SbUMT))
kpv<-c(kpv,c('UM','UME','UMT'))
View(Data.r)
# peces diurnos
Data.r <- complete_cols(Data.r, Data.et,  "eventID", c("samplingEffort","eventTime"))#
View(Data.r)
#others
# Complete columns in Data.r that are in Data.e.
Data.r <- complete_cols(Data.r, Data.et, "eventID",vector_cols = c("samplingProtocol"))#
library(stringi)
Data.et$samplingProtocol <- trimws(Data.et$samplingProtocol)
Data.r$samplingProtocol <- trimws(Data.r$samplingProtocol)
Data.et$samplingProtocol <- homolog_factors(Data.et, column = "samplingProtocol")
Data.r$samplingProtocol <- homolog_factors(Data.r, column = "samplingProtocol")
#Data.r$habitat<-trimws(Data.r$habitat)
Data.r$organismQuantity<-as.numeric(Data.r$organismQuantity)
Data.et$samplingEffort[is.na(Data.et$samplingEffort)]<-0
unique(Data.et$samplingProtocol)
unique(Data.r$samplingProtocol)
###this applies for fish ###
if(outD == "Peces"){
Data.et$samplingProtocol[Data.et$samplingProtocol=="Red de arrastre"|Data.et$samplingProtocol=="Red de Arrastre"]<-"Arrastre"
Data.et$samplingProtocol[Data.et$samplingProtocol=="trasmallo"]<-"Trasmallo"
unique(Data.et$samplingProtocol)
}
unique(Data.et$samplingProtocol)
unique(Data.r$samplingProtocol)
Data.et$samplingProtocol[Data.et$samplingProtocol=="Red de arrastre"|Data.et$samplingProtocol=="Red de Arrastre"]<-"Arrastre"
Data.et$samplingProtocol[Data.et$samplingProtocol=="trasmallo"]<-"Trasmallo"
unique(Data.et$samplingProtocol)
unique(Data.et$samplingProtocol);unique(Data.r$samplingProtocol)
#All
unique(Data.r$samplingProtocol);unique(Data.et$samplingProtocol)
Data.e<-Data.et[Data.et$eventID%in%selr,] #only those records with data
#2c) group environment
#All
#section to verify that names of the columns is consistent
cnm.smp<-c("samplingEffort","samplingProtocol") #from data
kpv<-c(kpv,c('Data.e','ctnm','fnn','cnm.smp','gnm'))
Data.r$scientificName_2<-trimws(Data.r$scientificName)
!is.null(Data.r$identificationQualifier
)
Data.r$identificationQualifier
# identificationQualifier is used when we can't arrive to specific epithets of species
# used with fishes for example but not with birds
if(!is.null(Data.r$identificationQualifier)){
selrnm<-!is.na(Data.r$identificationQualifier)
Data.r$scientificName_2[selrnm]<-paste(Data.r$scientificName[selrnm],
trimws(Data.r$identificationQualifier[selrnm]))
}
#All
unique(Data.r$scientificName_2)
shrscitf<-gsub("^([[:alpha:]]{4}).*([[:space:]])([[:alpha:]]{4}).*$","\\1_\\3",
unique(Data.r$scientificName_2))
dupl<-which(shrscitf%in%shrscitf[duplicated(shrscitf)])
duplsp<-unique(Data.r$scientificName_2)[dupl]
print(duplsp)
Data.r[Data.r$scientificName_2%in%duplsp[3:4],c('scientificName','scientificName_2')]
# All
# others
covbk<-covbk[covbk$parentEventID%in%UMT,] #gets covariates on all UM
#All
cov<-covbk
cov$eventID <- gsub(pattern = "-", replacement = "_", x = cov$eventID)
kpv<-c(kpv,c('cov'))
# modify gsub searching character
samEff.t<-Data.et[,c('parentEventID',cnm.smp)] %>% na.omit(.)%>%
dplyr::mutate(samplEff=as.numeric(gsub("([0-9]+).*$",'\\1',samplingEffort)))%>%
dplyr::group_by(parentEventID,get(cnm.smp[2]))%>%
dplyr::summarize(samplEff=sum(samplEff),Num_ev=dplyr::n())
#All
colnames(samEff.t)[1:2]<-c('parentEventID',cnm.smp[2])
sameEff.tt<-split(samEff.t,as.factor(samEff.t$samplingProtocol))
library(vegan)
samEff.ttt<-purrr::map(sameEff.tt, function(x) data.frame(as.data.frame(x),
decostand(as.vector(x[,"samplEff"]),"max")))
kpv<-c(kpv,'samEff.ttt')
rm(list=ls()[!ls()%in%kpv])
View(Data.r)
View(Data.et)
# Collembola/Epifitas/Arboles/Anfibios/reptiles/coprofagos_ad/coprofagos_lv/Peces/
# Aves/zooplancton/perifiton/fitoplancton/macrofitas/hormigas/ #murcielagos
ommt<-c("")
ompv<-c("")
# All
Data.r2<-Data.r %>% dplyr::filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
nsp<-unique(Data.r2$parentEventID)
nsp<-length(!nsp%in%ompv)
library(tidyr)
Data.ee.r<-Data.r2%>%
dplyr::select(parentEventID,organismQuantity,samplingProtocol,scientificName_2)%>%
pivot_wider(names_from=parentEventID,values_from=organismQuantity,
values_fn=sum,values_fill=0)%>%
dplyr::mutate(TotAbu=rowSums(.[,3:(nsp+2)]),.keep="unused")%>%
dplyr::select(scientificName_2,samplingProtocol,TotAbu)
#others without zeros in the dataframe
library(tibble)
Data.ee.r<-Data.ee.r%>%pivot_wider(.,names_from=samplingProtocol,values_from=TotAbu, values_fn=sum,values_fill=0)%>%
column_to_rownames(.,var="scientificName_2")%>%as.list(.)
# All
library(iNEXT)
library(dplyr)
Hill.r<-iNEXT(Data.ee.r,q=c(0,1,2),datatype = "abundance")
PrintggiNext(paste(gnm,'_abM',sep=''),Hill.r)
kpv<-c(kpv,'Hill.r','Data.ee.r')
rm(list=ls()[!ls()%in%kpv])

if (!is.element(p, installed.packages()[,1])){			#if package is not installed
# r <- getOption("repos")								#assign R mirror for download
# r["CRAN"] <- "http://cran.us.r-project.org"
# options(repos = r)
# rm(r)
install.packages(p, dep = TRUE)			#install tuneR
library(p)
}else{
library(p)
}
}
for(p in rqurd ){
if (!is.element(p, installed.packages()[,1])){			#if package is not installed
# r <- getOption("repos")								#assign R mirror for download
# r["CRAN"] <- "http://cran.us.r-project.org"
# options(repos = r)
# rm(r)
install.packages(p, dep = TRUE)			#install tuneR
library(p)
}else{
library(p)
}
}
is.element(p, installed.packages()[,1])
for(p in rqurd ){
if (is.element(p, installed.packages()[,1])){			#if package is not installed
library(p)
}else{
install.packages(p, dep = TRUE)			#install tuneR
library(p)
}
}
for(p in rqurd ){
if (is.element(p, installed.packages()[,1])){			#if package is not installed
require(p)
}else{
install.packages(p, dep = TRUE)			#install tuneR
require(p)
}
}
i
rqurd %in% install.packages()
rqurd %in% installed.packages()
#0) Load required libraries
rqurd<-c("openxlsx","BiodiversityR","MASS","tidyverse","data.table","iNEXT",'reshape2','ggpubr',
'ggpmisc','evaluate',"fastDummies","corrplot","Hmisc","maptools","rgdal","sp",
"lattice","ggplot2","rgeos","ade4","Rtsne","reshape2", "purrr")
rqurd %in% installed.packages()
for(p in rqurd ){
if (is.element(p, installed.packages()[,1])){			#if package is not installed
require(p)
}else{
install.packages(p, dep = TRUE)			#install tuneR
require(p)
}
}
for(p in 1:rqurd ){
if (is.element(rqurd[p], installed.packages()[,1])){			#if package is not installed
require(rqurd[p])
}else{
install.packages(rqurd[p], dep = TRUE)			#install tuneR
require(rqurd[p])
}
}
for(p in 1:length(rqurd) ){
if (is.element(rqurd[p], installed.packages()[,1])){			#if package is not installed
require(rqurd[p])
}else{
install.packages(rqurd[p], dep = TRUE)			#install tuneR
require(rqurd[p])
}
}
install.packages(rqurd[p], dep = TRUE)
rqurd[p]
for(p in 1:length(rqurd) ){
if (is.element(rqurd[p], installed.packages()[,1])){
require(rqurd[p])
}else{
install.packages(rqurd[p], dep = TRUE)				#if package is not installed
require(rqurd[p])
}
}
install.packages(rqurd[p], dep = TRUE)
for(p in 1:length(rqurd) ){
if (is.element(rqurd[p], installed.packages()[,1])){
require(rqurd[p])
}else{
install.packages(rqurd[p], dep = TRUE)				#if package is not installed
require(rqurd[p])
}
}
install.packages(rqurd[p], dep = TRUE)
1:length(rqurd)
load("C:/humboldt/ANH_scripts/.RData")
library(ggrepel)
#0b) Define working directories and group variables
outD<-'Peces'#'Zooplancton' #master folder for output
outDD<-'Peces'#'Hidrobiologicos' #Grupo like stated in the covariate file
ctnm<-'waterBody' #CobColl'#"CuerpAgua" #main factor for análisis
gnm<- 'Pec' #'Coll'#"Zoop" #group prefix
fnn<-"sum" #function to aggregate samples within sampling unites
WDOut<-file.path(getwd(), "Analisis", "SalidasPreliminares")
dir.create(file.path(WDOut,outD), showWarnings = F)
WDOut<-file.path(WDOut,outD)
WDIn<-file.path(getwd(), "Analisis",'Matrices_Abundancia')
WDIn2<-file.path(getwd(), "Analisis",'Datos_Finales')
WDCov<-file.path(getwd(), "Analisis",'Covariables')
WDFunc<-file.path(getwd())
#create subdirectories
dir.create(file.path(WDOut,'CurvasDiversidad'))
dir.create(file.path(WDOut,'CurvasRank'))
dir.create(file.path(WDOut,'Covariables_PCA'))
dir.create(file.path(WDOut,'NMDS'))
dir.create(file.path(WDOut,'RDA'))
#0c) functions
source(file.path(WDFunc,'ANH_procAbu_functions.R'))
#1) covariances
covbk<-read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag3101.xlsx")))
for(p in 1:length(rqurd) ){
library(rqurd[p])
}
rqurd[p]
library(rqurd[p])
rqurd[p]
length(rqurd)
1:length(rqurd)
rqurd[p]
rqurd
for(p in 1:length(rqurd) ){
library(rqurd[p])
}
rqurd
rqurd[p]
library(rqurd[p])
for(p in 1:length(rqurd) ){
if (is.element(rqurd[p], installed.packages()[,1])){
library(rqurd[p])
}else{
install.packages(rqurd[p], dep = TRUE)				#if package is not installed
require(rqurd[p])
}
}
#0) Load required libraries
rqurd<-c("openxlsx","BiodiversityR","MASS","tidyverse","data.table","iNEXT",'reshape2','ggpubr',
'ggpmisc','evaluate',"fastDummies","corrplot","Hmisc","maptools","rgdal","sp",
"lattice","ggplot2","rgeos","ade4","Rtsne","reshape2", "purrr")
for(p in 1:length(rqurd) ){
if (is.element(rqurd[p], installed.packages()[,1])){
library(rqurd[p])
}else{
install.packages(rqurd[p], dep = TRUE)				#if package is not installed
require(rqurd[p])
}
}
for(p in 1:length(rqurd) ){
if (is.element(rqurd[p], installed.packages()[,1])){
require(rqurd[p], character.only = T)
}else{
install.packages(rqurd[p], dep = TRUE)				#if package is not installed
require(rqurd[p])
}
}
install.packages(rqurd[p], dep = TRUE)
#0b) Define working directories and group variables
outD<-'Peces'#'Zooplancton' #master folder for output
outDD<-'Peces'#'Hidrobiologicos' #Grupo like stated in the covariate file
ctnm<-'waterBody' #CobColl'#"CuerpAgua" #main factor for análisis
gnm<- 'Pec' #'Coll'#"Zoop" #group prefix
fnn<-"sum" #function to aggregate samples within sampling unites
WDOut<-file.path(getwd(), "Analisis", "SalidasPreliminares")
dir.create(file.path(WDOut,outD), showWarnings = F)
WDOut<-file.path(WDOut,outD)
WDIn<-file.path(getwd(), "Analisis",'Matrices_Abundancia')
WDIn2<-file.path(getwd(), "Analisis",'Datos_Finales')
WDCov<-file.path(getwd(), "Analisis",'Covariables')
WDFunc<-file.path(getwd())
#create subdirectories
dir.create(file.path(WDOut,'CurvasDiversidad'), showWarnings = F)
dir.create(file.path(WDOut,'CurvasRank'), showWarnings = F)
dir.create(file.path(WDOut,'Covariables_PCA'), showWarnings = F)
dir.create(file.path(WDOut,'NMDS'), showWarnings = F)
dir.create(file.path(WDOut,'RDA'), showWarnings = F)
#0c) functions
source(file.path(WDFunc,'ANH_procAbu_functions.R'))
#1) covariances
covbk<-read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag3101.xlsx")))
#1) covariances
covbk<- openxlsx::read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag3101.xlsx")))
covbk$FInt19meanx<-round(as.numeric(covbk$FInt19meanx),2)
names(covbk)[c(2,23,24:31,39,40)]<-c('parentEventID','Cobertura','CobAves',
'CobHerp','CobCopr','CobMarip',
'CobHorm','CobColl','CobMam','CobBot','CuerpAgua','NomCuerpAg')
unique(covbk$Cobertura)
unique(covbk$CobAves)
unique(covbk$CobHerp)
unique(covbk$CobHorm)
unique(covbk$CobMarip)
unique(covbk$CobMam)
unique(covbk$COBXCollembola)
for(i in c('Cobertura','CobAves','CobHerp','CuerpAgua','CobCopr','CobMarip',
'CobHorm','CobMam','CobBot','COBXCollembola')){
ccov<-covbk[,i]
ccov[ccov=="Bosque denso"]<-"Bosque Denso"
ccov[ccov=="Ci?naga"]<-"Cienaga"
ccov[ccov=="Herbazales"]<-"Herbazal"
ccov[ccov=="Cienagas"]<-"Cienaga"
ccov[ccov=="V?as"]<-"Vias"
ccov[ccov=="R?o Magdalena"]<-"R_Magdal"
covbk[,i]<-ccov
}
unique(covbk$CuerpAgua)
covbk$Cobertura<-factor(covbk$Cobertura,levels=c("Rios","Cienaga","Zonas Pantanosas","Otros Cuerpos Agua",
"Herbazal","Bosque Ripario",
"Bosque Denso","Bosque Abierto","Vegetacion Secundaria",
"Palma","Cultivos","Pastos","Zonas Desnudas Degradadas",
"Vias","Area Urbana"))
spa.c<-c("decimalLat","decimalLon")
cat.c<-c("Plataf","Red.Hidrica","CuerpAgua") #c("Plataf","CobColl","habitat","UCSuelo")#Coprofagos=c("Plataf","CobCopr","habitat")#Hidrobiol?gicos=c("Plataf","Red.Hidrica","CuerpAgua")#,"CobHerp")#c("Plataf","Red.Hidrica","CuerpAgua")
v.pres<-c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")#,"HEH18meanx")
v.rec<-c("Dis_Cienag","Dis_MGSG","Dis_Dre345", "DisBosque","Dis_CobNat","Tam_Parche")#,"FInt19meanx")
v.msite<-NULL
excl<-NULL
for (i in c(v.pres,v.rec)){
if(all(is.na(covbk[,i]))) excl<-c(excl,i)
}
v.pres<-v.pres[!v.pres%in%excl]
v.rec<-v.rec[!v.rec%in%excl]
#not for coprofagos
covbk$parentEventID<-trimws(gsub("-","_",covbk$parentEventID))
covbk$eventID<-trimws(gsub("-","_",covbk$eventID))
unique(covbk$GrupoBiolo)
#others
covbk<-covbk%>%dplyr::filter(GrupoBiolo==outDD)
#others
library(dplyr)
covbk<-covbk%>%dplyr::filter(GrupoBiolo==outDD)
covbk<-covbk%>%dplyr::select(-c('Tipo','Habitat'))
#1b)covariates only for Peces y Microbiol?gicos
CovM<-read.xlsx(file.path(getwd(), 'Analisis','Covariables','Base De Datos Peces Fisico Quimicos 1212.xlsx'),sheet=1,startRow = 3 )
#1) covariances
library(openxlsx)
#1b)covariates only for Peces y Microbiol?gicos
CovM<-read.xlsx(file.path(getwd(), 'Analisis','Covariables','Base De Datos Peces Fisico Quimicos 1212.xlsx'),sheet=1,startRow = 3 )
##check names##
names(CovM)[c(2,29:69,71,72,81:83)]<-c('parentEventID','CuerpAgua','NmCuerpAg','ProfProm','Ancho',
'ProfSechi','ProfCapFot','Temp','pH','OxgD','Cond',
'SatO2','SolidDis','COrgT','FDisp','Magnesio','Calcio',
'Sodio','TSolidDis','SoliTot','SoliSus','SoliSol','Fosfatos',
'Nitratos','Silicatos','GrasAceit','SAAM','DurCalcica','DurTotal',
'Alcalinid','sed_p_Arena','sed_p_Arcilla','sed_p_limo','sed_class',
'sed_p_COrg','sed_fosforo','sed_Magnes','sed_calcio','sed_Sodio',
'sed_boro','sed_hierro','sed_Nitrog',
'Pgras','Mflot','Vacuat','Vrip','CDosel')
#transformation
CovM$Log_Cond<-log10(CovM$Cond)
CovM[is.na(CovM)]<-0
v.msiteQA<-c('Temp','pH','OxgD','Cond',
'SatO2','SolidDis','COrgT','FDisp','Magnesio','Calcio',
'Sodio','TSolidDis','SoliTot','SoliSus','SoliSol','Fosfatos',
'Nitratos','Silicatos','GrasAceit','SAAM','DurCalcica','DurTotal',
'Alcalinid','Log_Cond')
v.msiteQS<-c('sed_p_Arena','sed_p_Arcilla','sed_p_limo','sed_p_COrg',
'sed_fosforo','sed_Magnes','sed_calcio','sed_Sodio',
'sed_boro','sed_hierro','sed_Nitrog')
v.msiteF<-c('Bloques','Cantos.rodados','Guijarros','Grava','Pgras','Mflot','Vacuat','Vrip','CDosel','ProfProm','Ancho',
'ProfSechi','ProfCapFot')
MQA<-CovM%>%dplyr::select(all_of(v.msiteQA))%>%na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MQA<-lapply(MQA,function(x){
x[is.na(x)]<-0
return(x)
}
)
library(Hmisc)
MQA<-CovM%>%dplyr::select(all_of(v.msiteQA))%>%na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MQA<-lapply(MQA,function(x){
x[is.na(x)]<-0
return(x)
}
)
corrplot(MQA$r,type="upper", order="hclust",
p.mat = MQA$P, sig.level = 0.01, insig = "blank",tl.col='black')
library(corrplot)
corrplot(MQA$r,type="upper", order="hclust",
p.mat = MQA$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_QAgua',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MQA$r,type="upper", order="hclust",
p.mat = MQA$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
v.msiteQA<-c('Temp','OxgD',
'COrgT','FDisp',
'TSolidDis',
'Nitratos','Silicatos','GrasAceit','SAAM',
'Alcalinid','Log_Cond')
MQS<-CovM %>% dplyr::select(all_of(v.msiteQS)) %>% na.omit(.) %>% as.matrix(.) %>% rcorr(.)
MQS<-lapply(MQS,function(x){
x[is.na(x)]<-0
return(x)
}
)
corrplot(MQS$r,type="upper", order="hclust",
p.mat = MQS$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_QSedim',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MQS$r,type="upper", order="hclust",
p.mat = MQS$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
v.msiteQS<-c("sed_Nitrog","sed_p_limo","sed_fosforo","sed_Sodio",
"sed_hierro","sed_Magnes") #c("sed_Nitrog","sed_p_limo","sed_fosforo","sed_calcio",
#"sed_hierro","sed_Magnes")
MF<-CovM%>%dplyr::select(all_of(v.msiteF))%>%na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MF<-lapply(MF,function(x){x[is.na(x)]<-0
return(x)})
corrplot(MF$r,type="upper", order="hclust",
p.mat = MF$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_Struct',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MF$r,type="upper", order="hclust",
p.mat = MF$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
for(i in v.msiteF){
hist(CovM[,i],main=i)
readline(prompt='ENTER')
}
v.msiteF<-v.msiteF[!v.msiteF%in%c("Bloques","Guijarros","Pgras","Mflot","Vacuat","Arena","ProfSechi")]
MT<-CovM%>%dplyr::select(all_of(v.msiteF), all_of(v.msiteQA),all_of(v.msiteQS))%>%
na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MT<-lapply(MT,function(x){x[is.na(x)]<-0
return(x)})
corrplot(MT$r,type="upper", order="hclust",
p.mat = MT$P, sig.level = 0.01, insig = "blank",tl.col='black',
na.label.col = 'black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_FinalV',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MT$r,type="upper", order="hclust",
p.mat = MT$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
##Final Covariables
covbk<-CovM%>%dplyr::select(parentEventID,eventID,
all_of(v.msiteQA),all_of(v.msiteQS),all_of(v.msiteF),
all_of(cat.c),all_of(spa.c),all_of(v.pres),all_of(v.rec))
covbk$eventID<-gsub('-','_',covbk$eventID)
covbk$eventID<-gsub('ANH_','ANH',covbk$eventID)
covbk$eventID<-gsub('ANH','ANH_',covbk$eventID)
v.msite<-c(v.msiteQA,v.msiteQS,v.msiteF)
kpv<-c(ls(),'kpv') #variables to keep all the time
Data.et<-read.xlsx(file.path(getwd(),"data", "peces", "plantilla.xlsx"), sheet=1, startRow = 1, na.strings = "N/A")
Data.r<-read.xlsx(file.path(getwd(),"data", "peces", "plantilla.xlsx"), sheet=2, startRow = 1, na.strings = "N/A")
Data.r$eventID<-gsub('-','_',Data.r$eventID)
Data.r$identificationQualifier<-tolower(Data.r$identificationQualifier)
Data.r$scientificName[grep('^[[:lower:]]{1}',
Data.r$scientificName)]<-capitalize(Data.r$scientificName[grep('^[[:lower:]]',
Data.r$scientificName)])
#Estimate unique data
selr<-unique(Data.r$eventID)
SbUME<-Data.et$eventID[which(!Data.et$eventID%in%selr)] #Data with zero records
SbUMT<-unique(Data.et$eventID)
kpv<-c(kpv,c('Data.et','Data.r','SbUME','SbUMT','Data.rs'))
#UM  empty
Data.r$parentEventID <- gsub(pattern = "^(ANH_[0-9]+)(_.*[C|D])$", replacement = "\\1", Data.r$eventID)
UM<-unique(Data.r$parentEventID)
UME<-setdiff(unique(gsub(pattern = "^(ANH_[0-9]+)(_.*[C|D])$", replacement = "\\1", Data.r$eventID)), UM)
UMT<-unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", SbUMT))
kpv<-c(kpv,c('UM','UME','UMT'))
# this applies for fish
Data.r <- complete_cols(Data.r, Data.et,  "eventID", c("eventID", "samplingProtocol", "habitat"))#
#ALL
unique(Data.et$samplingProtocol)
Data.et$samplingProtocol <- trimws(Data.et$samplingProtocol)
Data.r$samplingProtocol <- trimws(Data.r$samplingProtocol)
#Data.r$habitat<-trimws(Data.r$habitat)
Data.r$organismQuantity<-as.numeric(Data.r$organismQuantity)
Data.et$samplingEffort[is.na(Data.et$samplingEffort)]<-0
###this applies for fish ###
Data.et$samplingProtocol[Data.et$samplingProtocol=="Red de arrastre"|Data.et$samplingProtocol=="Red de Arrastre"]<-"Arrastre"
Data.et$samplingProtocol[Data.et$samplingProtocol=="trasmallo"]<-"Trasmallo"
unique(Data.et$samplingProtocol)
unique(Data.r$samplingProtocol)
unique(Data.r$habitat)
Data.e<-Data.et[Data.et$eventID%in%selr,] #only those records with data
View(covbk)
#2c) group environment
#section to verify that names of the columns is consistent
cnm.smp<-c("samplingEffort","samplingProtocol") #from data
kpv<-c(kpv,c('Data.e','ctnm','fnn','cnm.smp','gnm'))
Data.r$scientificName_2<-trimws(Data.r$scientificName)
selrnm<-!is.na(Data.r$identificationQualifier)
Data.r$scientificName_2[selrnm]<-paste(Data.r$scientificName[selrnm],
trimws(Data.r$identificationQualifier[selrnm]))
unique(Data.r$scientificName_2)
shrscitf<-gsub("^([[:alpha:]]{4}).*([[:space:]])([[:alpha:]]{4}).*$","\\1_\\3",
unique(Data.r$scientificName_2))
dupl<-which(shrscitf%in%shrscitf[duplicated(shrscitf)])
duplsp<-unique(Data.r$scientificName_2)[dupl]
print(duplsp)
Data.r[Data.r$scientificName_2%in%duplsp[3:4],c('scientificName','scientificName_2')]
Data.r$scientificName_2[Data.r$scientificName_2%in%duplsp[c(1,3)]]<-'Hyphessobrycon natagaima aff. natagaima'
Data.r$scientificName_2[Data.r$scientificName_2%in%duplsp[c(2,4)]]<-'Characidium zebra cf. zebra'
# Complete columns in Data.r that are in Data.e. It usually is habitat #varies from group to group
Data.r <- complete_cols(Data.r, Data.et,  "eventID", c("eventID","parentEventID",
"samplingProtocol","habitat", "eventDate",
"eventTime"
))#
#others
covbk<-covbk[covbk$parentEventID%in%UMT,] #gets covariates on all UM
selr<-unique(Data.r$eventID)
SbUME<-Data.et$eventID[which(!Data.et$eventID%in%selr)] #Data with zero records
SbUMT<-unique(Data.et$eventID)
UM<-unique(Data.r$parentEventID)
UME<-setdiff(unique(gsub(pattern = "^(ANH_[0-9]+_[0-9]+_F)(_.*)$", replacement = "\\1", SbUME)), UM)
UMT<- unique(gsub(pattern = "^(ANH_[0-9]+_[0-9]+_F)(_.*)$", replacement = "\\1", SbUMT))
covbk$parentEventID<-covbk$eventID
mtchEv<-match(Data.et$eventID, covbk$eventID)
covbk2<-covbk[mtchEv,]
covbk2$eventID<-Data.et$eventID
View(covbk2)
covbk<-covbk2
cov<-covbk
kpv<-c(kpv,c('cov'))
View(cov)
#2d) get sampling effort
#for birds
#gsub("([0-9]+\\.*[0-9]+).*$"
#for fish/coprofagos
#gsub("([0-9]+).*$")
#zooplancton
#gsub("([0-9]+).*$",'\\1',samplingEffort)
samEff.t<-Data.et[,c('parentEventID',cnm.smp)] %>% na.omit(.)%>%
dplyr::mutate(samplEff=as.numeric(gsub("([0-9]+|[0-9]+\\.[0-9]+).*$",'\\1',samplingEffort)))%>%
dplyr::group_by(parentEventID,get(cnm.smp[2]))%>%
dplyr::summarize(samplEff=sum(samplEff),Num_ev=dplyr::n())
colnames(samEff.t)[1:2]<-c('parentEventID',cnm.smp[2])
sameEff.tt<-split(samEff.t,as.factor(samEff.t$samplingProtocol))
samEff.ttt<-purrr::map(sameEff.tt, function(x) data.frame(as.data.frame(x),decostand(as.vector(x[,"samplEff"]),"max")))
library(vegan)
samEff.ttt<-purrr::map(sameEff.tt, function(x) data.frame(as.data.frame(x),
decostand(as.vector(x[,"samplEff"]),"max")))
kpv<-c(kpv,'samEff.ttt')
rm(list=ls()[!ls()%in%kpv])
#3a) Diversity by method: abundance
#Regional Diversity
table(Data.r$parentEventID,Data.r$samplingProtocol)
rowSums(table(Data.r$parentEventID,Data.r$samplingProtocol))
#Collembola/Epifitas/Arboles/Anfibios/reptiles/coprofagos_ad/Peces/Aves/zooplancton/perifiton/fitoplancton/macrofitas/hormigas
ommt<-c("")
ompv<-c("")
Data.r2<-Data.r %>% dplyr::filter((!parentEventID%in%ompv)&(!samplingProtocol%in%ommt))
View(Data.r2)
nsp<-unique(Data.r2$parentEventID)
nsp<-length(!nsp%in%ompv)
Data.ee.r<-Data.r2%>%
dplyr::select(parentEventID,organismQuantity,samplingProtocol,scientificName_2)%>%
pivot_wider(names_from=parentEventID,values_from=organismQuantity,
values_fn=sum,values_fill=0)%>%
dplyr::mutate(TotAbu=rowSums(.[,3:(nsp+2)]),.keep="unused")%>%
dplyr::select(scientificName_2,samplingProtocol,TotAbu)
library(tidyr)
Data.ee.r<-Data.r2%>%
dplyr::select(parentEventID,organismQuantity,samplingProtocol,scientificName_2)%>%
pivot_wider(names_from=parentEventID,values_from=organismQuantity,
values_fn=sum,values_fill=0)%>%
dplyr::mutate(TotAbu=rowSums(.[,3:(nsp+2)]),.keep="unused")%>%
dplyr::select(scientificName_2,samplingProtocol,TotAbu)
View(Data.ee.r)
View(Data.ee.r)
#others without zeros in the dataframe
Data.ee.r<-Data.ee.r%>%pivot_wider(.,names_from=samplingProtocol,values_from=TotAbu, values_fn=sum,values_fill=0)%>%
column_to_rownames(.,var="scientificName_2")%>%as.list(.)
#others without zeros in the dataframe
library(tibble)
Data.ee.r<-Data.ee.r%>%pivot_wider(.,names_from=samplingProtocol,values_from=TotAbu, values_fn=sum,values_fill=0)%>%
column_to_rownames(.,var="scientificName_2")%>%as.list(.)
View(Data.ee.r)
Hill.r<-iNEXT(Data.ee.r,q=c(0,1,2),datatype = "abundance")
library(iNEXT)
Hill.r<-iNEXT(Data.ee.r,q=c(0,1,2),datatype = "abundance")
PrintggiNext(paste(gnm,'_abM',sep=''),Hill.r)
kpv<-c(kpv,'Hill.r','Data.ee.r')
rm(list=ls()[!ls()%in%kpv])
#Otros
ommt<-c("")
ompv<-c("")
Data.r2<-Data.r%>%filter((!parentEventID%in%ompv)&(!samplingProtocol%in%ommt))
Data.ii.r<-Data.r2%>%
dplyr::select(parentEventID,organismQuantity,scientificName_2)%>%
pivot_wider(names_from=parentEventID,values_from=organismQuantity, values_fn=sum,values_fill=0)%>%
mutate_if(is.numeric,~1*(.>0))%>%column_to_rownames(.,var="scientificName_2")%>%list(.)
Hill.rr<-iNEXT(Data.ii.r,q=c(0,1,2),datatype = "incidence_raw")
names(Hill.rr$iNextEst)<-"Regional"
PrintggiNext(paste(gnm,'_incO',sep=''),Hill.rr)
kpv<-c(kpv,'Hill.rr')
rm(list=ls()[!ls()%in%kpv])
#Aves
ommt<-c("Recorrido en lancha","Recorrido Libre") #method to be omitted
ompv<-c("ANH_380")
#Arboles/Anfibios/Reptiles/Coprofagos/hidrobiol?gicos
ommt<-c("")
#Arboles/Anfibios/Reptiles/Coprofagos/hidrobiol?gicos
ommt<-c("")
ompv<-c("")
# ctnm
Data.ee.oo<-Data.a.f(ctnm,fn="sum",scale=TRUE) #scale is used for groups non-integer abundance
View(Data.a.f)
View(Hill.r)
Hill.r$DataInfo
Hill.r$iNextEst
Hill.r$iNextEst[[1]]
Hill.r$iNextEst[[1]]
Hill.r$DataInfo
Hill.r$DataInfo
names(Data.ee.r)
Hill.r$iNextEst[[1]]

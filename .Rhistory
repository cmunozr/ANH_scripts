"Palma","Cultivos","Pastos","Zonas Desnudas Degradadas",
"Vias","Area Urbana"))
spa.c<-c("decimalLat","decimalLon")
#peces; c("Plataf","Red.Hidrica","CuerpAgua") #colembolos: c("Plataf","CobColl","habitat","UCSuelo")
#Coprofagos: c("Plataf","CobCopr","habitat")#Hidrobiol?gicos=c("Plataf","Red.Hidrica","CuerpAgua")#,"CobHerp")
# Aves: c("Plataf", "CobAves") #anfibios: c("Plataf", "CobHerp")
cat.c<-c("Plataf", "CobCopr")
#peces; c("Plataf","Red.Hidrica","CuerpAgua") #colembolos: c("Plataf","CobColl","habitat","UCSuelo")
#Coprofagos ad: c("Plataf","CobCopr") # #Coprofagos lv: c("Plataf", "CobCopr", "UCSuelo")
#Hidrobiol?gicos=c("Plataf","Red.Hidrica","CuerpAgua")#,"CobHerp")
# Aves: c("Plataf", "CobAves") #anfibios: c("Plataf", "CobHerp")
cat.c<-c("Plataf", "CobCopr", "UCSuelo")
v.pres<-c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")#,"HEH18meanx")
v.rec<-c("Dis_Cienag","Dis_MGSG","Dis_Dre345", "DisBosque","Dis_CobNat","Tam_Parche")#,"FInt19meanx")
v.msite<-NULL
excl<-NULL
for (i in c(v.pres,v.rec)){
if(all(is.na(covbk[,i]))) excl<-c(excl,i)
}
v.pres<-v.pres[!v.pres%in%excl]
v.rec<-v.rec[!v.rec%in%excl]
#others
covbk<-covbk%>%dplyr::filter(GrupoBiolo==outDD)
covbk<-covbk%>%dplyr::select(-c('Tipo','Habitat'))
if(outDD == "Peces"|outDD == "Microbiologicos"){
CovM<-read.xlsx(file.path(getwd(), 'Analisis','Covariables','Base De Datos Peces Fisico Quimicos 1212.xlsx'),sheet=1,startRow = 3 )
##check names##
names(CovM)[c(2,29:69,71,72,81:83)]<-c('parentEventID','CuerpAgua','NmCuerpAg','ProfProm','Ancho',
'ProfSechi','ProfCapFot','Temp','pH','OxgD','Cond',
'SatO2','SolidDis','COrgT','FDisp','Magnesio','Calcio',
'Sodio','TSolidDis','SoliTot','SoliSus','SoliSol','Fosfatos',
'Nitratos','Silicatos','GrasAceit','SAAM','DurCalcica','DurTotal',
'Alcalinid','sed_p_Arena','sed_p_Arcilla','sed_p_limo','sed_class',
'sed_p_COrg','sed_fosforo','sed_Magnes','sed_calcio','sed_Sodio',
'sed_boro','sed_hierro','sed_Nitrog',
'Pgras','Mflot','Vacuat','Vrip','CDosel')
#transformation
CovM$Log_Cond<-log10(CovM$Cond)
CovM[is.na(CovM)]<-0
v.msiteQA<-c('Temp','pH','OxgD','Cond',
'SatO2','SolidDis','COrgT','FDisp','Magnesio','Calcio',
'Sodio','TSolidDis','SoliTot','SoliSus','SoliSol','Fosfatos',
'Nitratos','Silicatos','GrasAceit','SAAM','DurCalcica','DurTotal',
'Alcalinid','Log_Cond')
v.msiteQS<-c('sed_p_Arena','sed_p_Arcilla','sed_p_limo','sed_p_COrg',
'sed_fosforo','sed_Magnes','sed_calcio','sed_Sodio',
'sed_boro','sed_hierro','sed_Nitrog')
v.msiteF<-c('Bloques','Cantos.rodados','Guijarros','Grava','Pgras','Mflot','Vacuat','Vrip','CDosel','ProfProm','Ancho',
'ProfSechi','ProfCapFot')
library(Hmisc)
MQA<-CovM%>%dplyr::select(all_of(v.msiteQA))%>%na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MQA<-lapply(MQA,function(x){
x[is.na(x)]<-0
return(x)
}
)
library(corrplot)
corrplot(MQA$r,type="upper", order="hclust",
p.mat = MQA$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_QAgua',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MQA$r,type="upper", order="hclust",
p.mat = MQA$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
v.msiteQA<-c('Temp','OxgD',
'COrgT','FDisp',
'TSolidDis',
'Nitratos','Silicatos','GrasAceit','SAAM',
'Alcalinid','Log_Cond')
MQS<-CovM %>% dplyr::select(all_of(v.msiteQS)) %>% na.omit(.) %>% as.matrix(.) %>% rcorr(.)
MQS<-lapply(MQS,function(x){
x[is.na(x)]<-0
return(x)
}
)
corrplot(MQS$r,type="upper", order="hclust",
p.mat = MQS$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_QSedim',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MQS$r,type="upper", order="hclust",
p.mat = MQS$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
v.msiteQS<-c("sed_Nitrog","sed_p_limo","sed_fosforo","sed_Sodio",
"sed_hierro","sed_Magnes") #c("sed_Nitrog","sed_p_limo","sed_fosforo","sed_calcio",
#"sed_hierro","sed_Magnes")
MF<-CovM%>%dplyr::select(all_of(v.msiteF))%>%na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MF<-lapply(MF,function(x){x[is.na(x)]<-0
return(x)})
corrplot(MF$r,type="upper", order="hclust",
p.mat = MF$P, sig.level = 0.01, insig = "blank",tl.col='black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_Struct',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MF$r,type="upper", order="hclust",
p.mat = MF$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
# for(i in v.msiteF){
#   hist(CovM[,i],main=i)
#   readline(prompt='ENTER')
# }
v.msiteF<-v.msiteF[!v.msiteF%in%c("Bloques","Guijarros","Pgras","Mflot","Vacuat","Arena","ProfSechi")]
MT<-CovM%>%dplyr::select(all_of(v.msiteF), all_of(v.msiteQA),all_of(v.msiteQS))%>%
na.omit(.)%>%as.matrix(.)%>%rcorr(.)
MT<-lapply(MT,function(x){x[is.na(x)]<-0
return(x)})
corrplot(MT$r,type="upper", order="hclust",
p.mat = MT$P, sig.level = 0.01, insig = "blank",tl.col='black',
na.label.col = 'black')
f.nm<-file.path(WDOut,'Covariables_PCA',paste('CorrM_FinalV',gnm,'.jpeg',sep=''))
jpeg(f.nm, width = 600, height = 480, quality=300)
corrplot(MT$r,type="upper", order="hclust",
p.mat = MT$P, sig.level = 0.01, insig = "blank",tl.col='black')
dev.off()
covbk<-CovM%>%dplyr::select(parentEventID,eventID,
all_of(v.msiteQA),all_of(v.msiteQS),all_of(v.msiteF),
all_of(cat.c),all_of(spa.c),all_of(v.pres),all_of(v.rec))
##Final Covariables
covbk$eventID<-gsub('-','_',covbk$eventID)
covbk$eventID<-gsub('ANH_','ANH',covbk$eventID)
covbk$eventID<-gsub('ANH','ANH_',covbk$eventID)
v.msite<-c(v.msiteQA,v.msiteQS,v.msiteF)
}
#Coprofagos/escarabajos ad and lv
covbk$eventID<-gsub('-','_',covbk$eventID)
# All
kpv<-c(ls(),'kpv') #variables to keep all the time
save.image(file = "kpv_temp.RData")
Data.et<-read.xlsx(file.path(getwd(),"data", "escarabajos", "AltasBajasLarvasMelolonthinos_T2.xlsx"),
sheet="Eventos", startRow = 1, na.strings = "N/A")
#Coprofagos_larvas
Data.et<-Data.et[Data.et$samplingProtocol=='Captura manual'&is.na(Data.et$EventRemaks),]
#All
Data.et$eventID<-gsub('-','_',Data.et$eventID)
Data.r<-read.xlsx(file.path(getwd(),"data", "escarabajos", "AltasBajasLarvasMelolonthinos_T2.xlsx"),
sheet="Registros", startRow = 1, na.strings = "N/A")
#All
Data.r$eventID<-gsub('-','_',Data.r$eventID)
# identificationQualifier is used when we can't arrive to specific epithets of species
# used with fishes for example but not with birds
if(!is.null(Data.r$identificationQualifier)){
Data.r$identificationQualifier<-tolower(Data.r$identificationQualifier)
}
library(Hmisc)
Data.r$scientificName[grep('^[[:lower:]]{1}',Data.r$scientificName)]<-
capitalize(Data.r$scientificName[grep('^[[:lower:]]', Data.r$scientificName)])
#All
#Estimate unique data
selr<-unique(Data.r$eventID)
#Coprofatos_lv
SbUME<-Data.et$eventID[which(!Data.et$eventID%in%selr&Data.et$samplingProtocol=="Captura manual")]
SbUMT<-unique(Data.et$eventID[which(Data.et$samplingProtocol=="Captura manual")])
#All
kpv<-c(kpv,c('Data.et','Data.r','SbUME','SbUMT','Data.rs'))
#All
#UM  empty
Data.r$parentEventID <- gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)
UM<-unique(Data.r$parentEventID)
UME<-setdiff(unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)), UM)
UMT<-unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", SbUMT))
kpv<-c(kpv,c('UM','UME','UMT'))
#others
# Complete columns in Data.r that are in Data.e.
Data.r <- complete_cols(Data.r, Data.et, "eventID",vector_cols = c("samplingProtocol"))#
library(stringi)
Data.et$samplingProtocol <- trimws(Data.et$samplingProtocol)
Data.r$samplingProtocol <- trimws(Data.r$samplingProtocol)
Data.et$samplingProtocol <- homolog_factors(Data.et, column = "samplingProtocol")
Data.r$samplingProtocol <- homolog_factors(Data.r, column = "samplingProtocol")
Data.et$samplingProtocol <- trimws(Data.et$samplingProtocol)
Data.r$samplingProtocol <- trimws(Data.r$samplingProtocol)
#Data.r$habitat<-trimws(Data.r$habitat)
Data.r$organismQuantity<-as.numeric(Data.r$organismQuantity)
Data.et$samplingEffort[is.na(Data.et$samplingEffort)]<-0
unique(Data.et$samplingProtocol)
unique(Data.r$samplingProtocol)
Data.et<-read.xlsx(file.path(getwd(),"data", "escarabajos", "AltasBajasLarvasMelolonthinos_T2.xlsx"),
sheet="Eventos", startRow = 1, na.strings = "N/A")
Data.et$samplingProtocol
#Coprofagos_larvas
Data.et<-Data.et[Data.et$samplingProtocol=='Captura manual'&is.na(Data.et$EventRemaks),]
Data.et$samplingProtocol=='Captura manual
'
Data.et<-read.xlsx(file.path(getwd(),"data", "escarabajos", "AltasBajasLarvasMelolonthinos_T2.xlsx"),
sheet="Eventos", startRow = 1, na.strings = "N/A")
Data.et$samplingProtocol=='Captura manual'
#Coprofagos_larvas
Data.et<-Data.et[Data.et$samplingProtocol=='Captura manual'|is.na(Data.et$EventRemaks),]
Data.et<-read.xlsx(file.path(getwd(),"data", "escarabajos", "AltasBajasLarvasMelolonthinos_T2.xlsx"),
sheet="Eventos", startRow = 1, na.strings = "N/A")
is.na(Data.et$EventRemaks)
#Coprofagos_larvas
Data.et<-Data.et[Data.et$samplingProtocol=='Captura manual',]
#All
Data.et$eventID<-gsub('-','_',Data.et$eventID)
#All
#Estimate unique data
selr<-unique(Data.r$eventID)
#Coprofatos_lv
SbUME<-Data.et$eventID[which(!Data.et$eventID%in%selr&Data.et$samplingProtocol=="Captura manual")]
SbUMT<-unique(Data.et$eventID[which(Data.et$samplingProtocol=="Captura manual")])
#All
kpv<-c(kpv,c('Data.et','Data.r','SbUME','SbUMT','Data.rs'))
#All
#UM  empty
Data.r$parentEventID <- gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)
UM<-unique(Data.r$parentEventID)
UME<-setdiff(unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", Data.r$eventID)), UM)
UMT<-unique(gsub(pattern = "^(ANH_[0-9]+)(_.*)$", replacement = "\\1", SbUMT))
kpv<-c(kpv,c('UM','UME','UMT'))
#others
# Complete columns in Data.r that are in Data.e.
Data.r <- complete_cols(Data.r, Data.et, "eventID",vector_cols = c("samplingProtocol"))#
library(stringi)
Data.et$samplingProtocol <- trimws(Data.et$samplingProtocol)
Data.r$samplingProtocol <- trimws(Data.r$samplingProtocol)
Data.et$samplingProtocol <- homolog_factors(Data.et, column = "samplingProtocol")
Data.r$samplingProtocol <- homolog_factors(Data.r, column = "samplingProtocol")
#Data.r$habitat<-trimws(Data.r$habitat)
Data.r$organismQuantity<-as.numeric(Data.r$organismQuantity)
Data.et$samplingEffort[is.na(Data.et$samplingEffort)]<-0
unique(Data.et$samplingProtocol)
unique(Data.r$samplingProtocol)
#Coprofagos_lv
Data.et$samplingProtocol[Data.et$samplingProtocol=="Captura manual"]<-"CapManual"
Data.r$samplingProtocol[Data.r$samplingProtocol=="Captura manual"]<-"CapManual"
#All
unique(Data.r$samplingProtocol)
#2c) group environment
#All
#section to verify that names of the columns is consistent
cnm.smp<-c("samplingEffort","samplingProtocol") #from data
kpv<-c(kpv,c('Data.e','ctnm','fnn','cnm.smp','gnm'))
Data.r$scientificName_2<-trimws(Data.r$scientificName)
# identificationQualifier is used when we can't arrive to specific epithets of species
# used with fishes for example but not with birds
if(!is.null(Data.r$identificationQualifier)){
selrnm<-!is.na(Data.r$identificationQualifier)
Data.r$scientificName_2[selrnm]<-paste(Data.r$scientificName[selrnm],
trimws(Data.r$identificationQualifier[selrnm]))
}
#coprofagos
Data.r$scientificName_2[selrnm]<-paste(Data.r$scientificName[selrnm],
paste(trimws(Data.r$identificationQualifier[selrnm]),
trimws(Data.r$identificationRemarks[selrnm]),sep=''))
Data.r$scientificName_2[selrnm]<-gsub(' NA','',Data.r$scientificName_2[selrnm])
#All
unique(Data.r$scientificName_2)
shrscitf<-gsub("^([[:alpha:]]{4}).*([[:space:]])([[:alpha:]]{4}).*$","\\1_\\3",
unique(Data.r$scientificName_2))
dupl<-which(shrscitf%in%shrscitf[duplicated(shrscitf)])
duplsp<-unique(Data.r$scientificName_2)[dupl]
print(duplsp)
# All
# others
covbk<-covbk[covbk$parentEventID%in%UMT,] #gets covariates on all UM
#All
cov<-covbk
kpv<-c(kpv,c('cov'))
# modify gsub searching character
samEff.t<-Data.et[,c('parentEventID',cnm.smp)] %>% na.omit(.)%>%
dplyr::mutate(samplEff=as.numeric(gsub("([0-9]+).*$",'\\1',samplingEffort)))%>%
dplyr::group_by(parentEventID,get(cnm.smp[2]))%>%
dplyr::summarize(samplEff=sum(samplEff),Num_ev=dplyr::n())
#All
colnames(samEff.t)[1:2]<-c('parentEventID',cnm.smp[2])
sameEff.tt<-split(samEff.t,as.factor(samEff.t$samplingProtocol))
library(vegan)
samEff.ttt<-purrr::map(sameEff.tt, function(x) data.frame(as.data.frame(x),
decostand(as.vector(x[,"samplEff"]),"max")))
kpv<-c(kpv,'samEff.ttt')
rm(list=ls()[!ls()%in%kpv])
# Collembola/Epifitas/Arboles/Anfibios/reptiles/coprofagos_ad/Peces/
# Aves/zooplancton/perifiton/fitoplancton/macrofitas/hormigas
ommt<-c("")
ompv<-c("")
# All
Data.r2<-Data.r %>% dplyr::filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
nsp<-unique(Data.r2$parentEventID)
nsp<-length(!nsp%in%ompv)
library(tidyr)
Data.ee.r<-Data.r2%>%
dplyr::select(parentEventID,organismQuantity,samplingProtocol,scientificName_2)%>%
pivot_wider(names_from=parentEventID,values_from=organismQuantity,
values_fn=sum,values_fill=0)%>%
dplyr::mutate(TotAbu=rowSums(.[,3:(nsp+2)]),.keep="unused")%>%
dplyr::select(scientificName_2,samplingProtocol,TotAbu)
#others without zeros in the dataframe
library(tibble)
Data.ee.r<-Data.ee.r%>%pivot_wider(.,names_from=samplingProtocol,values_from=TotAbu, values_fn=sum,values_fill=0)%>%
column_to_rownames(.,var="scientificName_2")%>%as.list(.)
# All
library(iNEXT)
library(dplyr)
Hill.r<-iNEXT(Data.ee.r,q=c(0,1,2),datatype = "abundance")
PrintggiNext(paste(gnm,'_abM',sep=''),Hill.r)
kpv<-c(kpv,'Hill.r','Data.ee.r')
rm(list=ls()[!ls()%in%kpv])
#Otros
ommt<-c("")
ompv<-c("")
Data.r2<-Data.r%>%filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
Data.ii.r<-Data.r2%>%
dplyr::select(parentEventID,organismQuantity,scientificName_2)%>%
pivot_wider(names_from=parentEventID,values_from=organismQuantity, values_fn=sum,values_fill=0)%>%
mutate_if(is.numeric,~1*(.>0))%>%column_to_rownames(.,var="scientificName_2")%>%list(.)
Hill.rr<-iNEXT(Data.ii.r,q=c(0,1,2),datatype = "incidence_raw")
names(Hill.rr$iNextEst)<-"Regional"
PrintggiNext(paste(gnm,'_incO',sep=''),Hill.rr)
kpv<-c(kpv,'Hill.rr')
rm(list=ls()[!ls()%in%kpv])
#Arboles/Anfibios/Reptiles/Coprofagos/hidrobiol?gicos
ommt<-c("")
ompv<-c("")
# ctnm
Data.ee.oo<-Data.a.f(catnm = ctnm, fn="sum",scale=TRUE) #scale is used for groups non-integer abundance
map(names(Data.ee.oo), function (x){
write.csv(Data.ee.oo[[x]],file.path(WDOut,
paste("species_HabHomolog", x,".csv", sep="")))
})
Data.ee.oo2<-map(names(Data.ee.oo),function(xx){
x<-Data.ee.oo[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.oo2)<-names(Data.ee.oo)
map(names(Data.ee.oo),function(xx){
fnm2<-paste(gnm,ctnm,xx,sep='_')
v<-Data.ee.oo2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,ctnm,v)
return()
})
kpv<-c(kpv,'Data.ee.oo')
##Plataforma
Data.ee.pt<-Data.a.f('Plataf',fnn,scale=FALSE)
write.csv(Data.ee.pt[[1]],file.path(WDOut,"species_plataf.csv"))
Data.ee.pt2<-map(names(Data.ee.pt),function(xx){
x<-Data.ee.pt[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.pt2)<-names(Data.ee.pt)
map(names(Data.ee.pt),function(xx){
fnm2<-paste(gnm,'Plataf',xx,sep='_')
v<-Data.ee.pt2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,'Plataf',v)
return()
})
kpv<-c(kpv,'Data.ee.pt','Data.ee.pts')
##Cobertura
Data.ee.hb<-Data.a.f('Cobertura',fnn)
Data.ee.hb2<-map(names(Data.ee.hb),function(xx){
x<-Data.ee.hb[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.hb2)<-names(Data.ee.hb)
map(names(Data.ee.hb),function(xx){
fnm2<-paste(gnm,'Cobertura',xx,sep='_')
v<-Data.ee.hb2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,'Cobertura',v)
return()
})
kpv<-c(kpv,'Data.ee.hb')
#Suelo
Data.ee.sl<-Data.a.f('UCSuelo',fnn)
write.csv(Data.ee.sl[[1]],file.path(WDOut,"species_Suelo.csv"))
Data.ee.sl2<-map(names(Data.ee.sl),function(xx){
x<-Data.ee.sl[[xx]]
iNext.o<-iNEXT(x,q=c(0,1,2), datatype="abundance")
return(iNext.o)
})
names(Data.ee.sl2)<-names(Data.ee.sl)
map(names(Data.ee.sl2),function(xx){
fnm2<-paste(gnm,'habitat',xx,sep='_')
v<-Data.ee.sl2[[xx]]
PrintggiNext(fnm2,v)
PrintRefiNext(fnm2,'habitat',v)
return()
})
kpv<-c(kpv,'Data.ee.sl')
#All
rm(list=ls()[!ls()%in%kpv])
#3d) Hill by factor with Incidence
ommt<-c("") #method to be omitted
ompv<-c("")
#ctnm
Data.ei.oo<-Data.i.f(ctnm)
Data.ei.oo2<-iNEXT(Data.ei.oo,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm,ctnm,sep='_')
PrintggiNextInc(fnm2,Data.ei.oo2)
fnm2<-paste(gnm,ctnm,'Inc',sep='_')
PrintRefiNext(fnm2,ctnm,Data.ei.oo2)
kpv<-c(kpv,'Data.ei.oo')
#plataforma
Data.ei.pt<-Data.i.f('Plataf')
Data.ei.pt2<-iNEXT(Data.ei.pt,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm, 'Plataf',sep='_')
PrintggiNextInc(fnm2,Data.ei.pt2)
fnm2<-paste(gnm,'Plataf','Inc',sep='_')
PrintRefiNext(fnm2,'Plataf',Data.ei.pt2)
kpv<-c(kpv,'Data.ei.pt2')
#Cobertura
Data.ei.hb<-Data.i.f('Cobertura')
Data.ei.hb2<-iNEXT(Data.ei.hb,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm, 'Cobertura',sep='_')
PrintggiNextInc(fnm = fnm2,iNxt = Data.ei.hb2)
fnm2<-paste(gnm,'Cobertura','Inc',sep='_')
PrintRefiNext(fnm2,'Cobertura',Data.ei.hb2)
kpv<-c(kpv,'Data.ei.hb2')
rm(list=ls()[!ls()%in%kpv])
#Suelo
Data.ei.sl<-Data.i.f('UCSuelo')
Data.ei.sl2<-iNEXT(Data.ei.sl,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm, 'UCSuelo',sep='_')
PrintggiNextInc(fnm2,Data.ei.sl2)
fnm2<-paste(gnm,'UCSuelo','Inc',sep='_')
PrintRefiNext(fnm2,'UCSuelo',Data.ei.sl2)
kpv<-c(kpv,'Data.ei.sl2')
#Coprofagos
ompv<-c("")
ommt<-c("")
#Suelo
Data.ei.sl<-Data.i.f('UCSuelo')
Data.ei.sl2<-iNEXT(Data.ei.sl,q=c(0,1,2), datatype="incidence_raw")
fnm2<-paste(gnm, 'UCSuelo',sep='_')
PrintggiNextInc(fnm2,Data.ei.sl2)
fnm2<-paste(gnm,'UCSuelo','Inc',sep='_')
PrintRefiNext(fnm2,'UCSuelo',Data.ei.sl2)
kpv<-c(kpv,'Data.ei.sl2')
# All
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#Aves
ommt<-c("") #method to be omitted
#Arboles/Anfibios/Reptiles/Peces/zooplancton/Coprofagos
ommt<-c("")
ompv<-c("")
ompv<-c("")
Data.ee.mm0<-Data.a.MU(DataP = Data.r,evID = 'parentEventID',
expPEID = "^(ANH_[0-9]+)(_.*)$",fn = fnn, scale=FALSE)
Data.ee.mm<-map(names(Data.ee.mm0),function(x){
xx<-Data.ee.mm0[[x]]
y<-CompletEmpty(xx,'parentEventID',UME,x)
})
names(Data.ee.mm)<-names(Data.ee.mm0)
kpv<-c(kpv,'Data.ee.mm')
rm(list=ls()[!ls()%in%kpv])
#4b) Hills by sub-MU with abundance
rowSums(table(Data.r$eventID,Data.r$organismQuantity))
#Arboles/Anfibios/Reptiles/peces/hidrobiologicos/coprofagos
ommt<-c("")
ompv<-c("")
Data.ee.nn0<-Data.a.MU(Data.r,'eventID',"^(ANH_[0-9]+)(_.*)$",fnn,scale=FALSE)
Data.ee.nn<-map(names(Data.ee.nn0),function(x){
xx<-Data.ee.nn0[[x]]
y<-CompletEmpty(xx,'eventID',SbUME,x)
#shorter names for coprofagos
#y$eventID<-gsub("(ANH_[0-9]+)(_T. Exc. Human)([0-9]+)(_2021-)([0-9]+-[0-9]+)(/.*)","\\1_\\3/\\5",y$eventID)
return(y)
})
names(Data.ee.nn)<-names(Data.ee.nn0)
kpv<-c(kpv,'Data.ee.nn')
rm(list=ls()[!ls()%in%kpv])
#4c) agregando periodo (para peces es lo mismo que Sub_MU)
ommt<-c("") #method to be omitted
ompv<-c("")
schtxt<-""
library(lubridate)
Data.pr<-Data.r%>%
mutate('eventPer'=hour(as.POSIXct(Data.r$eventTime,format="%H:%M:%S")))
Data.pr$eventPer[Data.pr$eventPer<18|Data.pr$eventPer>21]<-21
Data.pr$eventPer<-paste(Data.pr$parentEventID,Data.pr$eventPer,sep='_')
Data.ee.tt<-Data.a.MU(Data.pr,'eventPer',"^(ANH_[0-9]+)(_.*)$",fnn)
kpv<-c(kpv,'Data.ee.tt','schtxt')
rm(list=ls()[!ls()%in%kpv])
#Epifitas/Arboles/Anfibios/reptiles/coprofagos/zooplanction/collembola
ommt<-c("")
ompv<-c("")
# All
Data.pt<-Data.r%>%
filter((!parentEventID%in%ompv)&(!eventID%in%ompv)&(!samplingProtocol%in%ommt))
nsp<-length(unique(Data.pt$parentEventID))
#Coprofagos_lv
grp<-list('CapManual'=c('CapManual'))
Data.ee.pr<-Data.a.pt(grp,Data.pt,'eventID',fnn,scale=TRUE) #cambiar ID dependiendo de registros
#Coprofagos_lv
Data.ee.prr<-Data.i.pr(Data.ee.pr,grp,'parentEventID',
expPEID='^(ANH_[0-9]+)(_.*)$',
c('CapManual'))
#All
cov.1<-cov%>%filter(parentEventID%in%Data.ee.prr$parentEventID)%>%
distinct(parentEventID,.keep_all=T)%>%dplyr::select(-c('eventID'))
Data.ee.prr<-Data.ee.prr%>%
inner_join(.,cov.1, by="parentEventID")
write.csv(Data.ee.prr,file.path(WDOut,'CurvasDiversidad',
paste(gnm,'_','MU_Inc_Estim_Grp.csv',sep='')))
kpv<-c(kpv,'Data.ee.pr','Data.ee.prr','grp')
rm(list=ls()[!ls()%in%kpv])
#4e) diversidad por periodo combinando protocolos/Abundancia
ommt<-c("") #method to be omitted
ompv<-c("")
Data.pr<-Data.r%>%
mutate('eventPer'=gsub(schtxt,"_",eventID))%>%dplyr::select(-eventID) #Peces _
Data.ei.t<-Data.a.pt(grp,Data.pr,'eventPer',fn="sum")
Data.ei.ttt<-Data.a.t(Data.ei.t,'evenPer',grp,samEff.ttt,c('TrmpExHum'))
Data.ei.ttt<-Data.a.t(Data.ei.t,'evenPer',grp,samEff.ttt,c('CapManual'))
write.csv(Data.ei.ttt,file.path(WDOut,'CurvasDiversidad', paste(gnm,'_','SubTempMU_Estim_Grp.csv',sep='')))
kpv<-c(kpv,'Data.ei.t','Data.ei.ttt')
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))

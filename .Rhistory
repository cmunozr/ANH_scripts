similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
# reconcile names of cobertures
i = 14
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
# reconcile names of cobertures
i = 15
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
# reconcile names of cobertures
i = 16
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
# reconcile names of cobertures
i = 17
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
# reconcile names of cobertures
i = 18
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
# reconcile names of cobertures
i = 19
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
# rename and fill cobertures with habitat if them exist
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
tosave = covbk$Cobertura
tosave = covbk$Cobertura
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
tosave[which(tosave == unique(tosave)[i])] <- similar[1]
}
}
}
unique(tosave)
unique(covbk)
unique(covbk$Cobertura)
unique(covbk$Cobertura)
unique(tosave)
length(covbk$Cobertura)
length(tosave)
# reconcile names of cobertures
i = 8
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
similar[1]
tosave[which(tosave == unique(tosave)[i])]
unique(tosave)[i]
unique(covbk$Cobertura)[i]
tosave = covbk$Cobertura
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
tosave[which(tosave == unique(covbk$Cobertura)[i])] <- similar[1]
}
}
}
unique(tosave)
library(stringi)
source(file.path(getwd(), "R", "Setup.R"))
do.install(rqurd = vector.rqurd)
WDobjects <- do.folderStructure(taxon = "Mamiferos")
WDIn <- WDobjects$WDIn
WDIn2 <-  WDobjects$WDIn2
WDCov <- WDobjects$WDCov
WDOut <- WDobjects$WDOut
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
# reconcile names of cobertures
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
covbk$Cobertura[which(covbk$Cobertura == unique(covbk$Cobertura)[i])] <- similar[1]
}
}
}
covbk$Cobertura <- factor(covbk$Cobertura,levels=c("Rios","Cienaga","Zonas Pantanosas","Otros Cuerpos Agua",
"Herbazal","Bosque Ripario",
"Bosque Denso","Bosque Abierto","Vegetacion Secundaria",
"Palma","Cultivos","Pastos","Zonas Desnudas Degradadas",
"Vias","Area Urbana"))
covbk$Cobertura
levels=c("Rios","Cienaga","Zonas Pantanosas","Otros Cuerpos Agua",
"Herbazal","Bosque Ripario",
"Bosque Denso","Bosque Abierto","Vegetacion Secundaria",
"Palma","Cultivos","Pastos","Zonas Desnudas Degradadas",
"Vias","Area Urbana")
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
# rename and fill cobertures with habitat if them exist
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
# reconcile names of cobertures
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
covbk$Cobertura[which(covbk$Cobertura == unique(covbk$Cobertura)[i])] <- similar[1]
}
}
}
covbk$Cobertura
covbk$Cobertura <- as.factor(covbk$Cobertura)
covbk$Cobertura
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
tosave = covbk$Cobertura
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
tosave[which(tosave == unique(covbk$Cobertura)[i])] <- similar[1]
}
}
}
covbk$Cobertura <- tosave
length(covbk$Cobertura)
length(tosave)
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
# reconcile names of cobertures
i = 8
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
tosave = covbk$Cobertura
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
tosave[which(tosave == unique(covbk$Cobertura)[i])] <- similar[1]
}
}
}
covbk$Cobertura <- tosave %>% as.factor()
covbk$Cobertura
View(covbk4)
View(covbk1)
covbk1 <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoANH2209.xlsx")))
covbk1 <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoANH2209.xlsx")))
covbk2 <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag311.xlsx")))
covbk3 <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1110.xlsx")))
covbk4 <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
covbk5 <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag2809.xlsx")))
c(spa.c, cat.c, v.pres, v.rec)
spa.c <- c("decimalLat","decimalLon")
# categoric columns
cat.c <- c("Plataf","Red.Hidrica","Orden")
# human pressure vector
v.pres <- c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")
# environmnet vector
v.rec <- c("Dis_Cienag","Dis_MGSG")#, "DisBosque","Dis_CobNat","Tam_Parche")
c(spa.c, cat.c, v.pres, v.rec)
covbk1[,c(spa.c, cat.c, v.pres, v.rec)]
covbk2[,c(spa.c, cat.c, v.pres, v.rec)]
covbk3[,c(spa.c, cat.c, v.pres, v.rec)]
covbk4[,c(spa.c, cat.c, v.pres, v.rec)]
covbk5[,c(spa.c, cat.c, v.pres, v.rec)]
# environmnet vector
v.rec <- "DisBosque","Dis_CobNat","Tam_Parche") #c("Dis_Cienag","Dis_MGSG")#,
covbk5[,c(spa.c, cat.c, v.pres, v.rec)]
# environmnet vector
v.rec <- c("DisBosque","Dis_CobNat","Tam_Parche") #c("Dis_Cienag","Dis_MGSG")#,
covbk5[,c(spa.c, cat.c, v.pres, v.rec)]
covbk5[,c(spa.c)]
covbk4[,c(spa.c)]
covbk5[,c(spa.c)]
covbk3[,c(spa.c)]
covbk2[,c(spa.c)]
covbk1[,c(spa.c)]
covbk1[,c(cat.c)]
# categoric columns
cat.c <- c("Plataf","Red.Hidrica","Orden")
covbk1[,c(cat.c)]
covbk2[,c(cat.c)]
covbk3[,c(cat.c)]
covbk4[,c(cat.c)]
covbk5[,c(cat.c)]
covbk1[,c(v.pres)]
covbk2[,c(v.pres)]
covbk3[,c(v.pres)]
covbk4[,c(v.pres)]
covbk5[,c(v.pres)]
covbk5[,c(v.rec)]
covbk4[,c(v.rec)]
covbk3[,c(v.rec)]
covbk2[,c(v.rec)]
covbk1[,c(v.rec)]
# environmnet vector
v.rec <- c("Dis_Cienag","Dis_MGSG") #c("DisBosque","Dis_CobNat","Tam_Parche") ##,
covbk1[,c(v.rec)]
covbk2[,c(v.rec)]
covbk3[,c(v.rec)]
covbk4[,c(v.rec)]
covbk5[,c(v.rec)]
names(covbk)[grep("[E|e]ven",names(covbk))]
names(covbk)[grep("[E|e]ven",names(covbk))] <- c('eventID','parentEventID')
names(covbk)[grep("[E|e]ven",names(covbk))] <- c('eventID','parentEventID')
covbk$parentEventID <- trimws(gsub("-","_",covbk$parentEventID))
covbk$parentEventID
covbk$eventID<-trimws(gsub("-","_",covbk$eventID))
covbk<-covbk%>%select(-c('Tipo','GrupoBiolo'))
covbk
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
# rename and fill cobertures with habitat if them exist
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
# reconcile names of cobertures and change to factors
tosave = covbk$Cobertura
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
tosave[which(tosave == unique(covbk$Cobertura)[i])] <- similar[1]
}
}
}
covbk$Cobertura <- tosave %>% as.factor()
# Spatial columns
spa.c <- c("decimalLat","decimalLon")
# categoric columns
cat.c <- c("Plataf","Red.Hidrica","Orden")
# human pressure vector
v.pres <- c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")
# environmnet vector
v.rec <- c("Dis_Cienag","Dis_MGSG")#, "DisBosque","Dis_CobNat","Tam_Parche")
# ????
v.msite<-NULL
# 1.1 #verify names
names(covbk)[grep("[E|e]ven",names(covbk))] <- c('eventID','parentEventID')
covbk$parentEventID <- trimws(gsub("-","_",covbk$parentEventID))
covbk$eventID<-trimws(gsub("-","_",covbk$eventID))
covbk%>%select(c('Tipo','GrupoBiolo'))
names(covbk1)
names(covbk2)
names(covbk5)
#1b) micro habitat covariates
CovM <- read.xlsx(file.path(WDCov,'variablesAmbientales_microH.xlsx'), sheet = 1, startRow = 3 )
CovM
library(stringi)
source(file.path(getwd(), "R", "Setup.R"))
do.install(rqurd = vector.rqurd)
WDobjects <- do.folderStructure(taxon = "Mamiferos")
WDIn <- WDobjects$WDIn
WDIn2 <-  WDobjects$WDIn2
WDCov <- WDobjects$WDCov
WDOut <- WDobjects$WDOut
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
tosave = covbk$Cobertura
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
tosave[which(tosave == unique(covbk$Cobertura)[i])] <- similar[1]
}
}
}
covbk$Cobertura <- tosave %>% as.factor()
# Spatial columns
spa.c <- c("decimalLat","decimalLon")
# categoric columns
cat.c <- c("Plataf","Red.Hidrica","Orden")
# human pressure vector
v.pres <- c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")
# environmnet vector
v.rec <- c("Dis_Cienag","Dis_MGSG")#, "DisBosque","Dis_CobNat","Tam_Parche")
# ????
v.msite<-NULL
names(covbk)[grep("[E|e]ven",names(covbk))] <- c('eventID','parentEventID')
covbk$parentEventID <- trimws(gsub("-", "_", covbk$parentEventID))
covbk$eventID <- trimws(gsub("-", "_", covbk$eventID))
covbk <- covbk %>% select(c('Tipo', 'GrupoBiolo'))
names(covbk)[grep("[E|e]ven",names(covbk))] <- c('eventID','parentEventID')
covbk$parentEventID <- trimws(gsub("-", "_", covbk$parentEventID))
covbk$eventID <- trimws(gsub("-", "_", covbk$eventID))
covbk <- covbk %>% select(c('Tipo', 'GrupoBiolo'))
WDobjects <- do.folderStructure(taxon = "Mamiferos")
WDIn <- WDobjects$WDIn
WDIn2 <-  WDobjects$WDIn2
WDCov <- WDobjects$WDCov
WDOut <- WDobjects$WDOut
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
tosave = covbk$Cobertura
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
tosave[which(tosave == unique(covbk$Cobertura)[i])] <- similar[1]
}
}
}
covbk$Cobertura <- tosave %>% as.factor()
# Spatial columns
spa.c <- c("decimalLat","decimalLon")
# categoric columns
cat.c <- c("Plataf","Red.Hidrica","Orden")
# human pressure vector
v.pres <- c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")
# environmnet vector
v.rec <- c("Dis_Cienag","Dis_MGSG")#, "DisBosque","Dis_CobNat","Tam_Parche")
# ????
v.msite<-NULL
names(covbk)[grep("[E|e]ven",names(covbk))] <- c('eventID','parentEventID')
covbk$parentEventID <- trimws(gsub("-", "_", covbk$parentEventID))
covbk$eventID <- trimws(gsub("-", "_", covbk$eventID))
covbk <- covbk %>% select(c('Tipo', 'GrupoBiolo'))
CovM <- read.xlsx(file.path(WDCov,'variablesAmbientales_microH.xlsx'), sheet = 1, startRow = 3 )
CovM
names(CovM)[c(1,2,3,5,6,7,8,18,19)]<-c('parentEventID','Plataf','Temp','OxgD','Cond','Pgras','Mflot','Vrip','Cdos')
CovM
names(CovM)[c(3,4,5,13,17,18,19,20)]
CovM$Log_Cond <- log10(CovM$Cond)
CovM[is.na(CovM)] <- 0
v.msite <- names(CovM)[c(3,4,5,13,17,18,19,20)]
v.msite
my.name <- readline(prompt="Enter name: ")
library(svDialogs)
install.packages(svDialogs)
install.packages("svDialogs")
library(svDialogs)
user.input <- dlgInput("Enter a number", Sys.info()["user"])$res
library(svDialogs)
user.input <- dlgInput("Enter a number")
user.input
user.input <- dlgInput("Enter a number")[1]
user.input
user.input <- dlgInput("Enter a number")$res
user.input
user.input <- dlgInput("Enter a number")$res
WDobjects <- do.folderStructure(taxon = dlgInput("Taxon to work")$res)
WDobjects <- do.folderStructure(taxon = dlgInput("Taxon to work")$res)
source(file.path(getwd(), "R", "Setup.R"))
do.install(rqurd = vector.rqurd)
WDobjects <- do.folderStructure(taxon = dlgInput("Taxon to work")$res)
WDIn <- WDobjects$WDIn
WDIn2 <-  WDobjects$WDIn2
WDCov <- WDobjects$WDCov
WDOut <- WDobjects$WDOut
# Spatial columns
spa.c <- dlgInput("Latitude and longitude columns name (separe by comma)")$res
# Spatial columns
spa.c <- dlgInput("Latitude and longitude columns name (separe by comma)")$res # c("decimalLat","decimalLon")
# Spatial columns
spa.c <- dlgInput("Latitude and longitude columns name (separe by comma)")$res %>%
strsplit(",")
spa.c
# Spatial columns
spa.c <- dlgInput("Latitude and longitude columns name (separe by comma)")$res %>%
strsplit(",") %>% unlist()
# categoric columns
cat.c <- dlgInput("Column names of categorical covariables to work in the analysis (separe by comma)")$res %>%
strsplit(",") %>% unlist() #c("Plataf","Red.Hidrica","Orden")
# human pressure vector
v.pres <- dlgInput("Column names of Human pressure covariables (separe by comma)") %>%
strsplit(",") %>% unlist() #c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")
# human pressure vector
v.pres <- dlgInput("Column names of Human pressure covariables (separe by comma)") %>%
strsplit(",") %>% unlist() #c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")
# human pressure vector
v.pres <- dlgInput("Column names of Human pressure covariables (separe by comma)")
# human pressure vector
v.pres <- dlgInput("Column names of Human pressure covariables (separe by comma)") %>%
strsplit(",") %>% unlist() #c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")
# human pressure vector
v.pres <- dlgInput("Column names of Human pressure covariables (separe by comma)") %>%
strsplit(",") %>% unlist() #c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")
# human pressure vector
v.pres <- dlgInput("Column names of Human pressure covariables (separe by comma)")$res %>%
strsplit(",") %>% unlist() #c("Dis_CP","Dis_Oleodu", "Dis_Pozo","Dis_Pozact","Dis_Ferroc","Dis_ViaPri","Dia_ViaSec")
# environmnet vector
v.rec <- dlgInput("Column names of Environmental distance covariables (separe by comma)")$res #c("Dis_Cienag","Dis_MGSG")#, "DisBosque","Dis_CobNat","Tam_Parche")
names(covbk)[grep("[E|e]ven",names(covbk))] <- c('eventID','parentEventID')
covbk$parentEventID <- trimws(gsub("-", "_", covbk$parentEventID))
covbk$eventID <- trimws(gsub("-", "_", covbk$eventID))
covbk <- covbk %>% select(c('Tipo', 'GrupoBiolo'))
source(file.path(getwd(), "R", "Setup.R"))
do.install(rqurd = vector.rqurd)
WDobjects <- do.folderStructure(taxon = dlgInput("Taxon to work")$res)
WDIn <- WDobjects$WDIn
WDIn2 <-  WDobjects$WDIn2
WDCov <- WDobjects$WDCov
WDOut <- WDobjects$WDOut
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
tosave = covbk$Cobertura
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
tosave[which(tosave == unique(covbk$Cobertura)[i])] <- similar[1]
}
}
}
covbk$Cobertura <- tosave %>% as.factor()
spa.c
names(covbk)[grep("[E|e]ven",names(covbk))] <- c('eventID','parentEventID')
covbk$parentEventID <- trimws(gsub("-", "_", covbk$parentEventID))
covbk$eventID <- trimws(gsub("-", "_", covbk$eventID))
covbk <- covbk %>% select(c('Tipo', 'GrupoBiolo'))
##################################################
#1) covariances database
# 1.a) Preprocesing covars
# read excel file of covariances
covbk <- read.xlsx((file.path(WDCov,"BDPuntosMuestreoMag1910.xlsx")))
# rename some covariables
covbk <- rename(covbk, 'parentEventID' = 'parentEven', 'CobSR' = 'Cobertura')
# rename and fill cobertures with habitat if them exist
if(which(names(covbk) == "CobertXHabitat") != 0){
covbk <- rename(covbk, 'Cobertura' = 'CobertXHabitat')
covbk$Cobertura[is.na(covbk$Cobertura)]<-covbk$CobSR[is.na(covbk$Cobertura)]
}
# reconcile names of cobertures and change to factors
tosave = covbk$Cobertura
for(i in 1:length(unique(covbk$Cobertura))){
similar <- unique(covbk$Cobertura)[agrep(unique(covbk$Cobertura)[i], unique(covbk$Cobertura), max.distance = 0.2)] %>%
stri_trans_general(id = "Latin-ASCII")
if(length(similar) > 1){
for(j in 1:length(similar)){
tosave[which(tosave == unique(covbk$Cobertura)[i])] <- similar[1]
}
}
}
covbk$Cobertura <- tosave %>% as.factor()
names(covbk)[grep("[E|e]ven",names(covbk))] <- c('eventID','parentEventID')
covbk$parentEventID <- trimws(gsub("-", "_", covbk$parentEventID))
covbk$eventID <- trimws(gsub("-", "_", covbk$eventID))
covbk <- covbk %>% select(-c('Tipo', 'GrupoBiolo'))
where = dlgInput("Position of columns to rename (separe by comma)")$res %>% as.numeric() # c(1,2,3,5,6,7,8,18,19)
where = dlgInput("Position of columns to rename (separe by comma)")$res
where = dlgInput("Position of columns to rename (separe by comma)")$res
where = dlgInput("Position of columns to rename (separe by comma)")$res %>% as.numeric()
where = dlgInput("Position of columns to rename (separe by comma)")$res %>%
strsplit(",") %>% as.numeric()
where = dlgInput("Position of columns to rename (separe by comma)")$res %>%
strsplit(",") %>% unlist() %>% as.numeric()

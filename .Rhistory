return(point.df)
})
names(Data.ee.e)<-names(Data.ee.mm)
kpv<-c(kpv,'Data.ee.e')
map(names(Data.ee.e), function(x){
map(c(v.pres,v.rec,v.msite), function (vv){
print(vv)
plnm<-paste('DivP_',gnm,'_',x,'_',vv,sep='')
point.df<-Data.ee.e[[x]]
plotCvar(point.df,vv,plnm,x)
})
})
# plots with incidence data
map(unique(Data.ee.prr$grp), function(x){
map(c(v.msite,v.pres,v.rec), function (v){
point.df<-Data.ee.prr%>%dplyr::select(estimado,order,grp,cmb_smpEf,all_of(v))%>%
filter(grp==x)
names(point.df)[names(point.df)=='cmb_smpEf']<-'samplEff.1'
plnm<-paste('DivP_Inc_',gnm,'_',x,'_',v,sep='')
plotCvar(point.df,v,plnm,x)
})})
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#Arboles/Reptiles/anfibios/coprofagos_ad/zooplanction
ommt<-c("")
ompv<-c("")
#ctnm
library(ggrepel)
Data.rk.a<-Data.a.r(ctnm,gnm,fnn,scale=TRUE)
map(names(Data.rk.a), function(x){
RA.data<-Data.rk.a[[x]]
plotRnkAb(RA.data,gnm,ctnm,x)
})
#ctnm
library(ggrepel);library(Hmisc)
Data.rk.a<-Data.a.r(ctnm,gnm,fnn,scale=TRUE)
library(tidyr)
Data.rk.a<-Data.a.r(ctnm,gnm,fnn,scale=TRUE)
#0) Load required libraries
rqurd<-c("purrr", "openxlsx","BiodiversityR","MASS","tidyverse","data.table","iNEXT",'reshape2','ggpubr',
'ggpmisc','evaluate',"fastDummies","corrplot","Hmisc","maptools","rgdal","sp", "dplyr",
"lattice","ggplot2","rgeos","ade4","Rtsne")
for(p in 1:length(rqurd) ){
if (sum(grepl(pattern =rqurd[p], x = installed.packages()[,1])) != 0){
library(rqurd[p], character.only = T)
}else{
install.packages(rqurd[p], dep = TRUE)				#if package is not installed
library(rqurd[p], character.only = T)
}
}
for(p in 1:length(rqurd) ){
if (sum(grepl(pattern =rqurd[p], x = installed.packages()[,1])) != 0){
library(rqurd[p], character.only = T)
}else{
install.packages(rqurd[p], dep = TRUE)				#if package is not installed
library(rqurd[p], character.only = T)
}
}
Data.rk.a<-Data.a.r(ctnm,gnm,fnn,scale=TRUE)
#ctnm
library(ggrepel);library(tidyr); library(tibble)
Data.rk.a<-Data.a.r(ctnm,gnm,fnn,scale=TRUE)
map(names(Data.rk.a), function(x){
RA.data<-Data.rk.a[[x]]
plotRnkAb(RA.data,gnm,ctnm,x)
})
#Plataforma
Data.rk.pf<-Data.a.r('Plataf',gnm,fnn,scale=TRUE)#paste(gnm,'f8'),fnn,scale=FALSE  gnm,fnn,scale=TRUE
map(names(Data.rk.pf), function(x){
RA.data<-Data.rk.pf[[x]]
plotRnkAb(RA.data,gnm,'Plataf',x)
})
Data.pr<-Data.r%>%
mutate('Periodo'=hour(as.POSIXct(Data.r$eventTime,
format="%H:%M:%S")))
library(lubridate)
Data.pr<-Data.r%>%
mutate('Periodo'=hour(as.POSIXct(Data.r$eventTime,
format="%H:%M:%S")))
Data.pr$Periodo[Data.pr$Periodo<18|Data.pr$Periodo>21]<-21
Data.pr<-Data.pr%>%filter(!parentEventID%in%ompv&!samplingProtocol%in%ommt)
Data.rk.at<-Data.a.rt(Data.pr,ctnm,'Periodo',gnm,fnn,scale=FALSE)
map(names(Data.rk.at), function(x){
RA.data<-Data.rk.at[[x]]
plotRnkAb(RA.data,gnm,"Cob_Period",x)
})
kpv<-c(kpv,'Data.rk.a','Data.rk.c','Data.rk.pf','Data.rk.rh','Data.rk.sl')
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
###########################################################
load("Analisis/SalidasPreliminares/Escarabajos_T1/wrkspcEsc2022-07-14.RData")
###########################################################
load("Analisis/SalidasPreliminares/Escarabajos_T2/wrkspcEsc2022-07-14.RData")
outD<-'Escarabajos_T2'#'Zooplancton' #master folder for output
outDD<-'Escarabajos'#'Hidrobiologicos' #Grupo like stated in the covariate file
ctnm<- "CobCopr" # 'waterBody' #CobColl'#"CuerpAgua" #reptiles y anfibios: CobHerp #escarabajos coprofagos: "CobCopr" #main factor for anÃ¡lisis
gnm<- 'Esc' #'Coll'#"Zoop" #group prefix
fnn<-"sum" #function to aggregate samples within sampling unites
WDOut<-file.path(getwd(), "Analisis", "SalidasPreliminares")
dir.create(file.path(WDOut,outD), showWarnings = F)
WDOut<-file.path(WDOut,outD)
WDIn<-file.path(getwd(), "Analisis",'Matrices_Abundancia')
WDIn2<-file.path(getwd(), "Analisis",'Datos_Finales')
WDCov<-file.path(getwd(), "Analisis",'Covariables')
WDFunc<-file.path(getwd())
#5) Plot with MU diversity -Abundance
#plot with cover color
library(forcats); library(dplyr); library(ggplot2)
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
plotMU_cat(x,point.dff,ctnm,'parentEventID','MU_Est')
})
#Plataforma
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
plotMU_cat(x,point.dff,"Plataf",'parentEventID','MU_Est_Cob')
})
#box plot by ctnm
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
boxpMU_cat(x,point.dff,ctnm,'HabMU_est')
})
#box plot by Plataforma
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
boxpMU_cat(x,point.dff,"Plataf",'CobMU_est')
})
#plot by MU with sampling groups
plotMU_cat('grp',Data.ee.prr,'grp','parentEventID','MU_EstGr_Inc')
#ctnm
plotMU_cat(names(Data.ee.pr),Data.ee.prr,ctnm,'parentEventID','MU_Est_cobHorm')
#ctnm
map(names(Data.ee.nn),function(x){
point.dff<-Data.ee.nn[[x]]
plotMU_cat(x,point.dff,ctnm,'eventID','subMU_Est')
})
#Plataforma
map(names(Data.ee.nn),function(x){
point.dff<-Data.ee.nn[[x]]
plotMU_cat(x,point.dff,"Plataf",'eventID','subMU_Est')
})
#plot by sub-MU-period abundance
#ctnm
map(names(Data.ee.tt),function(x){
point.dff<-Data.ee.tt[[x]]
plotMU_cat(x,point.dff,ctnm,'eventPer','HabsubMUPer_Est')
})
#Plataforma
map(names(Data.ee.tt),function(x){
point.dff<-Data.ee.tt[[x]]
plotMU_cat(x,point.dff,'Plataf','eventPer','CobsubMUPer_Est')
})
#Plot by sub-MU-Incidence-period
plotMU_cat('grp',Data.ei.ttt,'grp','evenPer','subMU_EstGr_Inc')
#boxplot by ctnm, inc
map(names(grp),function(x){
point.dff<-Data.ee.prr%>%filter(grp==x)
flnm<-paste(ctnm,'MU_est_inc',x,sep='_')
boxpMU_cat(x,point.dff,ctnm,flnm)
})
#boxplot by Plataf, inc
map(names(grp),function(x){
point.dff<-Data.ee.prr%>%filter(grp==x)
flnm<-paste('PlatafMU_est_inc',x,sep='_')
boxpMU_cat(x,point.dff,'Plataf',flnm)
})
#plot by continue variables
Data.ee.e<-map(names(Data.ee.mm),function(x){
point.df<-Data.ee.mm[[x]]%>%
inner_join(.,samEff.ttt[[x]][,c("parentEventID","samplEff.1")],
by="parentEventID")
write.csv(point.df,file.path(WDOut,'CurvasDiversidad',paste(gnm,'_',x,'MU_Estim.csv',sep='')))
return(point.df)
})
names(Data.ee.e)<-names(Data.ee.mm)
kpv<-c(kpv,'Data.ee.e')
map(names(Data.ee.e), function(x){
map(c(v.pres,v.rec,v.msite), function (vv){
print(vv)
plnm<-paste('DivP_',gnm,'_',x,'_',vv,sep='')
point.df<-Data.ee.e[[x]]
plotCvar(point.df,vv,plnm,x)
})
})
# plots with incidence data
map(unique(Data.ee.prr$grp), function(x){
map(c(v.msite,v.pres,v.rec), function (v){
point.df<-Data.ee.prr%>%dplyr::select(estimado,order,grp,cmb_smpEf,all_of(v))%>%
filter(grp==x)
names(point.df)[names(point.df)=='cmb_smpEf']<-'samplEff.1'
plnm<-paste('DivP_Inc_',gnm,'_',x,'_',v,sep='')
plotCvar(point.df,v,plnm,x)
})})
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#Arboles/Reptiles/anfibios/coprofagos_ad/zooplanction
ommt<-c("")
ompv<-c("")
#ctnm
library(ggrepel);library(tidyr); library(tibble)
Data.rk.a<-Data.a.r(ctnm,gnm,fnn,scale=TRUE)
map(names(Data.rk.a), function(x){
RA.data<-Data.rk.a[[x]]
plotRnkAb(RA.data,gnm,ctnm,x)
})
#Plataforma
Data.rk.pf<-Data.a.r('Plataf',gnm,fnn,scale=TRUE)#paste(gnm,'f8'),fnn,scale=FALSE  gnm,fnn,scale=TRUE
map(names(Data.rk.pf), function(x){
RA.data<-Data.rk.pf[[x]]
plotRnkAb(RA.data,gnm,'Plataf',x)
})
library(lubridate)
Data.pr<-Data.r%>%
mutate('Periodo'=hour(as.POSIXct(Data.r$eventTime,
format="%H:%M:%S")))
Data.pr$Periodo[Data.pr$Periodo<18|Data.pr$Periodo>21]<-21
Data.pr<-Data.pr%>%filter(!parentEventID%in%ompv&!samplingProtocol%in%ommt)
Data.rk.at<-Data.a.rt(Data.pr,ctnm,'Periodo',gnm,fnn,scale=FALSE)
map(names(Data.rk.at), function(x){
RA.data<-Data.rk.at[[x]]
plotRnkAb(RA.data,gnm,"Cob_Period",x)
})
kpv<-c(kpv,'Data.rk.a','Data.rk.c','Data.rk.pf','Data.rk.rh','Data.rk.sl')
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
###########################################################
load("Analisis/SalidasPreliminares/Escarabajos/wrkspcEsc2022-07-14.RData")
#5) Plot with MU diversity -Abundance
#plot with cover color
library(forcats); library(dplyr); library(ggplot2)
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
plotMU_cat(x,point.dff,ctnm,'parentEventID','MU_Est')
})
#Cobertura
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
plotMU_cat(x,point.dff,"Cobertura",'parentEventID','MU_Est_Cob')
})
#Plataforma
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
plotMU_cat(x,point.dff,"Plataf",'parentEventID','MU_Est_Cob')
})
#box plot by ctnm
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
boxpMU_cat(x,point.dff,ctnm,'HabMU_est')
})
#box plot by Plataforma
map(names(Data.ee.mm),function(x){
point.dff<-Data.ee.mm[[x]]
boxpMU_cat(x,point.dff,"Plataf",'CobMU_est')
})
#plot by MU with sampling groups
plotMU_cat('grp',Data.ee.prr,'grp','parentEventID','MU_EstGr_Inc')
#ctnm
plotMU_cat(names(Data.ee.pr),Data.ee.prr,ctnm,'parentEventID','MU_Est_cobHorm')
#ctnm
map(names(Data.ee.nn),function(x){
point.dff<-Data.ee.nn[[x]]
plotMU_cat(x,point.dff,ctnm,'eventID','subMU_Est')
})
#Plataforma
map(names(Data.ee.nn),function(x){
point.dff<-Data.ee.nn[[x]]
plotMU_cat(x,point.dff,"Plataf",'eventID','subMU_Est')
})
#plot by sub-MU-period abundance
#ctnm
map(names(Data.ee.tt),function(x){
point.dff<-Data.ee.tt[[x]]
plotMU_cat(x,point.dff,ctnm,'eventPer','HabsubMUPer_Est')
})
#Plataforma
map(names(Data.ee.tt),function(x){
point.dff<-Data.ee.tt[[x]]
plotMU_cat(x,point.dff,'Plataf','eventPer','CobsubMUPer_Est')
})
#Plot by sub-MU-Incidence-period
plotMU_cat('grp',Data.ei.ttt,'grp','evenPer','subMU_EstGr_Inc')
#boxplot by ctnm, inc
map(names(grp),function(x){
point.dff<-Data.ee.prr%>%filter(grp==x)
flnm<-paste(ctnm,'MU_est_inc',x,sep='_')
boxpMU_cat(x,point.dff,ctnm,flnm)
})
#boxplot by Plataf, inc
map(names(grp),function(x){
point.dff<-Data.ee.prr%>%filter(grp==x)
flnm<-paste('PlatafMU_est_inc',x,sep='_')
boxpMU_cat(x,point.dff,'Plataf',flnm)
})
#plot by continue variables
Data.ee.e<-map(names(Data.ee.mm),function(x){
point.df<-Data.ee.mm[[x]]%>%
inner_join(.,samEff.ttt[[x]][,c("parentEventID","samplEff.1")],
by="parentEventID")
write.csv(point.df,file.path(WDOut,'CurvasDiversidad',paste(gnm,'_',x,'MU_Estim.csv',sep='')))
return(point.df)
})
names(Data.ee.e)<-names(Data.ee.mm)
kpv<-c(kpv,'Data.ee.e')
map(names(Data.ee.e), function(x){
map(c(v.pres,v.rec,v.msite), function (vv){
print(vv)
plnm<-paste('DivP_',gnm,'_',x,'_',vv,sep='')
point.df<-Data.ee.e[[x]]
plotCvar(point.df,vv,plnm,x)
})
})
# plots with incidence data
map(unique(Data.ee.prr$grp), function(x){
map(c(v.msite,v.pres,v.rec), function (v){
point.df<-Data.ee.prr%>%dplyr::select(estimado,order,grp,cmb_smpEf,all_of(v))%>%
filter(grp==x)
names(point.df)[names(point.df)=='cmb_smpEf']<-'samplEff.1'
plnm<-paste('DivP_Inc_',gnm,'_',x,'_',v,sep='')
plotCvar(point.df,v,plnm,x)
})})
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#Arboles/Reptiles/anfibios/coprofagos_ad/zooplanction
ommt<-c("")
ompv<-c("")
#ctnm
library(ggrepel);library(tidyr); library(tibble)
Data.rk.a<-Data.a.r(ctnm,gnm,fnn,scale=TRUE)
map(names(Data.rk.a), function(x){
RA.data<-Data.rk.a[[x]]
plotRnkAb(RA.data,gnm,ctnm,x)
})
#Plataforma
Data.rk.pf<-Data.a.r('Plataf',gnm,fnn,scale=TRUE)#paste(gnm,'f8'),fnn,scale=FALSE  gnm,fnn,scale=TRUE
map(names(Data.rk.pf), function(x){
RA.data<-Data.rk.pf[[x]]
plotRnkAb(RA.data,gnm,'Plataf',x)
})
library(lubridate)
Data.pr<-Data.r%>%
mutate('Periodo'=hour(as.POSIXct(Data.r$eventTime,
format="%H:%M:%S")))
Data.pr$Periodo[Data.pr$Periodo<18|Data.pr$Periodo>21]<-21
Data.pr<-Data.pr%>%filter(!parentEventID%in%ompv&!samplingProtocol%in%ommt)
Data.rk.at<-Data.a.rt(Data.pr,ctnm,'Periodo',gnm,fnn,scale=FALSE)
map(names(Data.rk.at), function(x){
RA.data<-Data.rk.at[[x]]
plotRnkAb(RA.data,gnm,"Cob_Period",x)
})
kpv<-c(kpv,'Data.rk.a','Data.rk.c','Data.rk.pf','Data.rk.rh','Data.rk.sl')
rm(list=ls()[!ls()%in%kpv])
save.image(file.path(WDOut,paste("wrkspc",gnm,Sys.Date(),".RData",sep="")))
#7) Ordenamiento NMDS por m?todo
pal <- c("lightsalmon1", "gold1", "palegreen4","slategray3","lightpink3","skyblue2","sienna2",
'olivedrab4','slateblue3')
clean_background <- theme(plot.background = element_rect("white"),
panel.background = element_rect("white"),
panel.grid = element_line("white"),
axis.line = element_line("gray25"),
axis.text = element_text(size = 12, color = "gray25"),
axis.title = element_text(color = "gray25"),
legend.text = element_text(size = 12),
legend.key = element_rect("white"))
#Abundancia-MU
ommt<-c("")
ompv<-c("")
#if funcion=sum
Data.r.ab<-Data.r%>%filter((!parentEventID%in%ompv)&(!samplingProtocol%in%ommt))%>%
dplyr::select(parentEventID,samplingProtocol,
organismQuantity,scientificName_2)%>%
pivot_wider(id_cols=c(parentEventID,samplingProtocol),
names_from=scientificName_2,values_from=organismQuantity,
values_fn=sum,values_fill=0)
#7) Ordenamiento NMDS por m?todo
load("Analisis/SalidasPreliminares/Escarabajos/wrkspcEsc2022-07-14.RData")
pal <- c("lightsalmon1", "gold1", "palegreen4","slategray3","lightpink3","skyblue2","sienna2",
'olivedrab4','slateblue3')
clean_background <- theme(plot.background = element_rect("white"),
panel.background = element_rect("white"),
panel.grid = element_line("white"),
axis.line = element_line("gray25"),
axis.text = element_text(size = 12, color = "gray25"),
axis.title = element_text(color = "gray25"),
legend.text = element_text(size = 12),
legend.key = element_rect("white"))
#Abundancia-MU
ommt<-c("")
ompv<-c("")
#if funcion=sum
Data.r.ab<-Data.r%>%filter((!parentEventID%in%ompv)&(!samplingProtocol%in%ommt))%>%
dplyr::select(parentEventID,samplingProtocol,
organismQuantity,scientificName_2)%>%
pivot_wider(id_cols=c(parentEventID,samplingProtocol),
names_from=scientificName_2,values_from=organismQuantity,
values_fn=sum,values_fill=0)
#others
Data.r.ab<-Data.r.ab%>%group_split(samplingProtocol)
names(Data.r.ab)<-names(Data.ee.oo)
#Abundancia -periodo
##modify if non-integer abundances
Data.s.ab<-Data.r%>%filter((!parentEventID%in%ompv)&(!samplingProtocol%in%ommt))%>%
mutate('eventPer'=gsub(schtxt,"_",eventID))%>%dplyr::select(-eventID)%>%
dplyr::select(eventPer,organismQuantity,samplingProtocol,scientificName_2)%>%
pivot_wider(id_cols=c(eventPer,samplingProtocol),
names_from=scientificName_2,values_from=organismQuantity,
values_fn=sum,values_fill=0)%>%
mutate(MU=as.numeric(gsub('(^ANH_)([[:digit:]]+)(_.*$)','\\2',eventPer)))%>%
group_split(samplingProtocol)
Data.s.abb<-map(Data.s.ab, function(x){
Data.ss<-x%>%group_by(MU)%>%
filter(n()>1)%>%
ungroup(.)%>%
dplyr::select(-MU)})
names(Data.s.abb)<-levels(as.factor(Data.r$samplingProtocol))
kpv<-c(kpv,'pal','clean_background','Data.r.ab','Data.s.abb')
#by ctnm
#install.packages("BBmisc")
library(BBmisc)
Data.r.ord<-getMNDS_abu(Data.r.ab,ctnm,'parentEventID')
names(Data.r.ord)<-names(Data.r.ab)
Data.r.df<-getNMDS_DF(Data.r.ord,'parentEventID')
names(Data.r.df)<-names(Data.r.ab)
PlotNMDS(Data.r.df,ctnm,'abu','parentEventID',lab=TRUE)
kpv<-c(kpv,'Data.r.ord','Data.r.df')
#by platform
Data.r.pl<-getMNDS_abu(Data.r.ab,'Plataf','parentEventID')
names(Data.r.pl)<-names(Data.r.ab)
Data.r.pl_df<-getNMDS_DF(Data.r.pl,'parentEventID')
names(Data.r.pl_df)<-names(Data.r.ab)
PlotNMDS(Data.r.pl_df,'Plataf','abu','parentEventID',lab=TRUE)
kpv<-c(kpv,'Data.r.pl','Data.r.pl_df')
#Ordenamiento by period SubMU-Abundance
Data.s.ord<-getMNDS_abu(Data.ab = Data.s.abb,vcat = ctnm,evenID = 'eventPer')
names(Data.s.ord)<-names(Data.r.ab)
Data.s.df<-getNMDS_DF(Data.s.ord,'eventPer')
names(Data.s.df)<-names(Data.s.abb)
PlotNMDS(Data.s.df,ctnm,'abu','Per')
kpv<-c(kpv,'Data.s.ord','Data.s.df')
#7b) how species contribute to dissimilarity
Data.r.sp<-NMDS_Sp(Data.r.ord,Data.r.ab,'abu','parentEventID')
names(Data.r.sp)<-names(Data.r.ord)
plotNMDS_sp(Data.r.sp,Data.r.df,ctnm,'abu','parentEventID',lab=FALSE)
plotNMDS_sp(Data.r.sp,Data.r.rh_df,'Red.Hidrica','abu','parentEventID')
plotNMDS_sp(Data.r.sp,Data.r.pl_df,'Platf','abu','parentEventID',lab=FALSE)
#subMU-period
Data.s.sp<-NMDS_Sp(Data.s.ord,Data.s.abb,'abu','eventPer')
names(Data.s.sp)<-names(Data.s.ord)
plotNMDS_sp(Data.sp = Data.s.sp,Data.df = Data.s.df,vcat = ctnm,sfx = 'abuPer',pcat = 'Per')
# Librerias
library(openxlsx)
library(dplyr)
# leer el archivo original
dataReg <- read.xlsx("data/mamiferos/I2D-BIO_2021_083_v2.xlsx", sheet = 1, startRow = 1, na.strings = "N/A")
# leer el archivo original
dataReg <- read.xlsx("data/mamiferos/I2D-BIO_2021_083_v2.xlsx", sheet = "Registros", startRow = 1, na.strings = "N/A")
dataEvent <- read.xlsx("data/mamiferos/I2D-BIO_2021_083_v2.xlsx", sheet="Eventos",
startRow = 1, na.strings = "N/A")
covs <- read.xlsx("Analisis/Covariables/BDPuntosMuestreoMag140722.xlsx", sheet=1,
startRow = 1, na.strings = "N/A") %>% filter(GrupoBiolo == "Mamiferos")
split_temporadas <- function(db, column = "eventID", char_search = "_T2"){
dataCol <- db[ , column]
# finding T2
index <- grepl(pattern = char_search, x = dataCol)
T1 <- db[!index, ]
T2 <- db[index, ]
return(list("T1" = T1, "T2" = T2))
}
# correr funcion split_temporadas
splitReg <- split_temporadas(db = dataReg, column = "eventID", char_search = "T2")
splitEvent <- split_temporadas(db = dataEvent, column = "eventID", char_search = "T2")
splitReg[["T2"]]$eventID <- gsub(pattern = "_TE2", replacement = "", x = splitReg[["T2"]]$eventID)
splitEvent[["T2"]]$eventID <- gsub(pattern = "_TE2", replacement = "", x = splitEvent[["T2"]]$eventID)
View(splitEvent)
View(splitReg)
splitReg[["T2"]]$eventID <- gsub(pattern = "_T2", replacement = "", x = splitReg[["T2"]]$eventID)
splitEvent[["T2"]]$eventID <- gsub(pattern = "_T2", replacement = "", x = splitEvent[["T2"]]$eventID)
View(dataEvent)
View(splitReg)
View(splitEvent)
dataReg$eventID <- gsub(pattern = "_T2", replacement = "", x = dataReg$eventID)
dataEvent$eventID <- gsub(pattern = "_T2", replacement = "", x = dataEvent$eventID)
View(dataEvent)
View(dataReg)
# constituyendo archivos de la temporada 1: dado que se mantendra el formato excel
# es necesario primero crear un excel con una sola hoja de trabajo, cargarlo de nuevo,
# agregar una nueva hoja y por ultimo escribir/guardar los datos de la nueva hoja
write.xlsx(splitReg[["T1"]], "data/mamiferos/Mamiferos_T1.xlsx", sheetName = "Registros")
wb <- loadWorkbook("data/mamiferos/mamiferos_T1.xlsx")
addWorksheet(wb, "Eventos")
writeData(wb, "Eventos",splitEvent[["T1"]])
saveWorkbook(wb, "data/mamiferos/mamiferos_T1.xlsx", overwrite = TRUE)
# constituyendo archivos de la temporada 2
write.xlsx(splitReg[["T2"]], "data/mamiferos/mamiferos_T2.xlsx", sheetName = "Registros")
wb <- loadWorkbook("data/mamiferos/mamifers_T2.xlsx")
wb <- loadWorkbook("data/mamiferos/mamiferos_T2.xlsx")
addWorksheet(wb, "Eventos")
writeData(wb, "Eventos",splitEvent[["T2"]])
saveWorkbook(wb, "data/escarabajos/mamiferos_T2.xlsx", overwrite = TRUE)
# constituyendo archivo original sin tag de temporada
write.xlsx(dataReg, "data/mamiferos/mamiferos_NoTag.xlsx", sheetName = "Registros")
wb <- loadWorkbook("data/mamiferos/mamiferos_NoTag.xlsx")
addWorksheet(wb, "Eventos")
writeData(wb, "Eventos", dataEvent)
saveWorkbook(wb, "data/mamiferos/mamiferos_NoTag.xlsx", overwrite = TRUE)
dataEvent$eventID %in% covs$eventID
splitEvent[["T1"]]$eventID
splitEvent[["T1"]]$eventID %in% covs$eventID
splitEvent[["T2"]]$eventID %in% covs$eventID
splitEvent[["T2"]]$eventID
covs$eventID
splitReg[["T1"]]$eventID %in% covs$eventID
splitReg[["T2"]]$eventID %in% covs$eventID
